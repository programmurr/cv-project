{"version":3,"sources":["components/Buttons.js","utils/useFormInput.js","components/GeneralInfo.js","utils/dateValidator.js","components/EducationDisplay.js","components/EducationForm.js","components/PracticalExperienceDisplay.js","components/PracticalExperienceForm.js","App.js","index.js"],"names":["AddButton","className","type","EditButton","props","onClick","handleEditClick","ResubmitButton","DeleteButton","handleDeleteClick","useFormInput","initialValue","useState","value","setValue","onChange","e","target","clear","GeneralInfoForm","onSubmit","handleSubmit","htmlFor","name","required","handleNameChange","email","handleEmailChange","pattern","phone","handlePhoneChange","GeneralInfoDisplay","handleEdit","GeneralInfo","info","genInfo","setGenInfo","useEffect","infoSubmitted","onInfoSubmit","preventDefault","dateValidator","fromDate","toDate","EditForm","educationInfo","schoolName","courseTitle","studyFromDate","studyToDate","handleEditSubmit","max","maxDate","React","Component","EducationDisplay","Date","toISOString","split","id","setId","setSchoolName","setCourseTitle","setStudyFromDate","setStudyToDate","editClicked","setEditClicked","onEducationEdit","alert","onEducationDelete","EducationForm","uniqid","educationObject","onEducationSubmit","EditExperience","experienceInfo","companyName","positionTitle","experienceFromDate","experienceToDate","responsibilities","PracticalExperienceDisplay","state","handleChange","bind","this","setState","event","Object","assign","onExperienceEdit","onExperienceDelete","PracticalExperienceForm","onExperienceSubmit","App","generalInfo","handleInfoSubmit","handleEducationSubmit","handleEducationEdit","handleEducationDelete","handleExperienceSubmit","handleExperienceEdit","handleExperienceDelete","status","concat","index","findIndex","edu","newEducationInfo","filter","exp","newExperienceInfo","length","map","education","experience","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37915215.chunk.js","sourcesContent":["import React from 'react';\n\n\nfunction AddButton() {\n  return (\n    <div className=\"AddButton\">\n      <button type=\"submit\">Add</button>\n    </div>\n  );\n}\n\nfunction EditButton(props) {\n  return (\n    <button onClick={props.handleEditClick}>Edit</button>\n  );\n}\n\nfunction ResubmitButton() {\n  return (\n    <div className=\"ResubmitButton\">\n      <button type=\"submit\">Resubmit</button>\n    </div>\n  );\n}\n\nfunction DeleteButton(props) {\n  return (\n    <div className=\"DeleteButton\">\n      <button onClick={props.handleDeleteClick}>Delete</button>\n    </div>\n  );\n}\n\nexport { AddButton, EditButton, ResubmitButton, DeleteButton };","import { useState } from 'react';\n\nexport default function useFormInput(initialValue) {\n  const [ value, setValue ] = useState(initialValue)\n\n  function handleChange(e) {\n    setValue(e.target.value);\n  }\n\n  function handleClear() {\n    setValue(\"\");\n  }\n\n  return {\n    value,\n    setValue,\n    onChange: handleChange,\n    clear: handleClear\n  }\n}","import React, { useEffect, useState } from 'react';\nimport { AddButton, EditButton } from './Buttons';\nimport useFormInput from '../utils/useFormInput'\n\nfunction GeneralInfoForm(props) {\n  return (\n    <div className=\"generalInfoForm\">\n      <h2>General Info</h2>\n      <form onSubmit={props.handleSubmit}>\n        <div className=\"generalInfoName\">\n          <label htmlFor=\"nameInput\">Name: </label>\n          <input \n            type=\"text\" \n            name=\"name\" \n            required=\"required\"\n            value={props.name}\n            onChange={props.handleNameChange}\n          />\n        </div>\n        <div className=\"generalInfoEmail\">\n          <label htmlFor=\"emailInput\">Email: </label>\n          <input \n            type=\"email\" \n            name=\"email\"\n            required=\"required\" \n            value={props.email}\n            onChange={props.handleEmailChange}\n          />\n        </div>\n        <div className=\"generalInfoPhone\">\n          <label htmlFor=\"PhoneInput\">Phone: </label>\n          <input \n            type=\"text\" \n            name=\"phone\" \n            required=\"required\"\n            pattern=\"[0-9]{9,13}\"\n            value={props.phone}\n            onChange={props.handlePhoneChange}\n          />\n        </div>\n        <AddButton />\n      </form>\n    </div>\n  )\n}\n\nfunction GeneralInfoDisplay(props) {\n  return (\n    <div className=\"generalInfoDisplay\">\n      <h2>General Info</h2>\n      <ul>\n        <li>Name: {props.name}</li>\n        <li>Email: {props.email}</li>\n        <li>Phone: {props.phone}</li>\n      </ul>\n      <EditButton handleEditClick={props.handleEdit}/>\n    </div>\n  );\n}\n\nfunction GeneralInfo(props) {\n  const name = useFormInput(\"\");\n  const email = useFormInput(\"\");\n  const phone = useFormInput(\"\");\n\n  const [genInfo, setGenInfo] = useState(props.info);\n  useEffect(() => {\n    setGenInfo({\n      name: name.value,\n      email: email.value,\n      phone: phone.value\n    });\n  }, [props.info])\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onInfoSubmit(genInfo, true);\n  }\n\n  function handleEdit() {\n    props.onInfoSubmit(genInfo, false);\n  }\n\n  if (props.infoSubmitted) {\n    return (\n      <GeneralInfoDisplay \n      name={name.value}\n      email={email.value}\n      phone={phone.value}\n      handleEdit={handleEdit}\n      />\n    );\n  } else {\n    return (\n      <GeneralInfoForm \n      name={name.value} \n      email={email.value}\n      phone={phone.value}\n      handleNameChange={name.onChange}\n      handleEmailChange={email.onChange}\n      handlePhoneChange={phone.onChange}\n      handleSubmit={handleSubmit}\n      />\n    );\n  }\n}\n\nexport default GeneralInfo;","export default function dateValidator(fromDate, toDate) {\n  if (fromDate < toDate) {\n    return true\n  } else if (fromDate > toDate){\n    return false\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { EditButton, ResubmitButton, DeleteButton } from './Buttons';\nimport dateValidator from '../utils/dateValidator';\nimport useFormInput from '../utils/useFormInput';\n\n\nfunction EditForm(props) {\n  const { schoolName, courseTitle, studyFromDate, studyToDate } = props.educationInfo;\n\n  return (\n    <div className=\"educationEditForm\">\n    <form onSubmit={props.handleEditSubmit}>\n      <div className=\"schoolName\">\n        <label htmlFor=\"schoolNameInput\">School Name:</label>\n        <input \n          type=\"text\"\n          name=\"schoolName\"\n          required=\"required\"\n          value={schoolName}\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"courseTitle\">\n        <label htmlFor=\"courseTitleInput\">Course Title:</label>\n        <input \n          type=\"text\"\n          name=\"courseTitle\"\n          required=\"required\"\n          value={courseTitle}\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"studyFromDate\">\n        <label htmlFor=\"studyFromInput\">From:</label>\n        <input \n          type=\"date\"\n          name=\"studyFromDate\"\n          required=\"required\"\n          max={props.maxDate}\n          value={studyFromDate}\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"studyToDate\">\n        <label htmlFor=\"studyToInput\">To:</label>\n        <input \n          type=\"date\"\n          name=\"studyToDate\"\n          required=\"required\"\n          max={props.maxDate}\n          value={studyToDate}\n          onChange={props.onChange}\n        />\n      </div>\n      <ResubmitButton />\n    </form>\n  </div>\n  )\n}\n\nfunction EducationDisplay(props) {\n\n  const maxDate = new Date().toISOString().split(\"T\")[0];\n\n  const [ id, setId ] = useState(props.educationInfo.id);\n  const [ schoolName, setSchoolName ] = useState(props.educationInfo.schoolName);\n  const [ courseTitle, setCourseTitle] = useState(props.educationInfo.courseTitle);\n  const [ studyFromDate, setStudyFromDate ] = useState(props.educationInfo.studyFromDate);\n  const [ studyToDate, setStudyToDate ] = useState(props.educationInfo.studyToDate);\n  const [ editClicked, setEditClicked ] = useState(props.educationInfo.editClicked);\n\n  \n  useEffect(() => {\n    setId(props.educationInfo.id);\n    setSchoolName(props.educationInfo.schoolName);\n    setCourseTitle(props.educationInfo.courseTitle);\n    setStudyFromDate(props.educationInfo.studyFromDate);\n    setStudyToDate(props.educationInfo.studyToDate);\n    setEditClicked(props.educationInfo.editClicked);\n  }, [\n    props.educationInfo.id,\n    props.educationInfo.schoolName,\n    props.educationInfo.courseTitle,\n    props.educationInfo.studyFromDate,\n    props.educationInfo.studyToDate,\n    props.educationInfo.editClicked\n  ])\n\n  function handleNameChange(e) {\n    setSchoolName(e.target.value);\n  }\n\n  function handleCourseChange(e) {\n    setCourseTitle(e.target.value);\n  }\n  \n  function handleFromChange(e) {\n    setStudyFromDate(e.target.value);\n  }\n\n  function handleToChange(e) {\n    setStudyToDate(e.target.value);\n  }\n\n  function handleDeleteClick() {\n    props.onEducationDelete({\n      id: id,\n      schoolName: schoolName,\n      courseTitle: courseTitle,\n      studyFromDate: studyFromDate,\n      studyToDate: studyToDate,\n      editClicked: editClicked\n    });\n  }\n\n  function handleEditSubmit(e) {\n    e.preventDefault();\n    const validated = dateValidator(studyFromDate, studyToDate);\n\n    if (validated) {\n      props.onEducationEdit({\n        id: id,\n        schoolName: schoolName,\n        courseTitle: courseTitle,\n        studyFromDate: studyFromDate,\n        studyToDate: studyToDate,\n        editClicked: false\n      })\n    } else {\n      alert(\"Please enter a valid date\");\n    }\n  }\n  \n\n  function handleEditClick() {\n    setEditClicked(true);\n  }\n\n  if (editClicked) {\n    return (\n      <div className=\"educationEditForm\">\n        <form onSubmit={handleEditSubmit}>\n          <div className=\"schoolName\">\n            <label htmlFor=\"schoolNameInput\">School Name:</label>\n            <input \n              type=\"text\"\n              name=\"schoolName\"\n              required=\"required\"\n              value={schoolName}\n              onChange={handleNameChange}\n            />\n          </div>\n          <div className=\"courseTitle\">\n            <label htmlFor=\"courseTitleInput\">Course Title:</label>\n            <input \n              type=\"text\"\n              name=\"courseTitle\"\n              required=\"required\"\n              value={courseTitle}\n              onChange={handleCourseChange}\n            />\n          </div>\n          <div className=\"studyFromDate\">\n            <label htmlFor=\"studyFromInput\">From:</label>\n            <input \n              type=\"date\"\n              name=\"studyFromDate\"\n              required=\"required\"\n              max={maxDate}\n              value={studyFromDate}\n              onChange={handleFromChange}\n            />\n          </div>\n          <div className=\"studyToDate\">\n            <label htmlFor=\"studyToInput\">To:</label>\n            <input \n              type=\"date\"\n              name=\"studyToDate\"\n              required=\"required\"\n              max={maxDate}\n              value={studyToDate}\n              onChange={handleToChange}\n            />\n          </div>\n          <ResubmitButton />\n        </form>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"educationDisplay\">\n        <ul>\n          <li>School Name: {schoolName}</li>\n          <li>Course Title: {courseTitle}</li>\n          <li>From: {studyFromDate}</li>\n          <li>To: {studyToDate}</li>\n        </ul>\n        <div className=\"buttonsContainer\">\n          <EditButton handleEditClick={handleEditClick} />\n          <DeleteButton handleDeleteClick={handleDeleteClick} />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass EducationDisplayClass extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      schoolName: \"\",\n      courseTitle: \"\",\n      studyFromDate: \"\",\n      studyToDate: \"\",\n      editClicked: false\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEditClick = this.handleEditClick.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(this.props.educationInfo)\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleEditClick() {\n    const state = Object.assign({}, this.state);\n    state.editClicked = true;\n\n    this.setState(state);\n  }\n\n  handleEditSubmit(event) {\n    event.preventDefault();\n    const validated = dateValidator(this.state.studyFromDate, this.state.studyToDate);\n\n    if (validated) {\n      this.props.onEducationEdit(this.state);\n    } else {\n      alert(\"Please enter a valid date\");\n    }\n  }\n\n  handleDeleteClick() {\n    this.props.onEducationDelete(this.state);\n  }\n\n  render() {\n    const maxDate = new Date().toISOString().split(\"T\")[0];\n\n    const { \n      schoolName, \n      courseTitle, \n      studyFromDate,\n      studyToDate,\n      editClicked \n    } = this.state;\n\n    if (editClicked) {\n      return (\n        <EditForm\n          maxDate={maxDate}\n          onChange={this.handleChange} \n          educationInfo={this.state}\n          handleEditSubmit={this.handleEditSubmit}\n        />\n      )\n    } else {\n      return (\n        <div className=\"educationDisplay\">\n          <ul>\n            <li>School Name: {schoolName}</li>\n            <li>Course Title: {courseTitle}</li>\n            <li>From: {studyFromDate}</li>\n            <li>To: {studyToDate}</li>\n          </ul>\n          <div className=\"buttonsContainer\">\n            <EditButton handleEditClick={this.handleEditClick} />\n            <DeleteButton handleDeleteClick={this.handleDeleteClick} />\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default EducationDisplay;","import React, { useState } from 'react';\nimport { AddButton }from './Buttons';\nimport uniqid from 'uniqid';\nimport dateValidator from '../utils/dateValidator';\nimport useFormInput from '../utils/useFormInput';\n\nfunction EducationForm(props) {\n  const maxDate = new Date().toISOString().split(\"T\")[0];\n  const [ id, setId ] = useState(uniqid());\n  const schoolName = useFormInput(\"\");\n  const courseTitle = useFormInput(\"\");\n  const studyFromDate = useFormInput(\"\");\n  const studyToDate = useFormInput(\"\");\n  const [ editClicked, setEditClicked ] = useState(false);\n\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const educationObject = {\n      id: id,\n      schoolName: schoolName.value,\n      courseTitle: courseTitle.value,\n      studyFromDate: studyFromDate.value,\n      studyToDate: studyToDate.value,\n      editClicked: editClicked\n    }\n\n    const validated = dateValidator(studyFromDate.value, studyToDate.value);\n\n    if (validated) {\n      props.onEducationSubmit(educationObject);\n\n      setId(uniqid())\n      schoolName.setValue(\"\");\n      courseTitle.setValue(\"\");\n      studyFromDate.setValue(\"\");\n      studyToDate.setValue(\"\");\n      setEditClicked(false)\n    } else {\n      alert(\"Please enter a valid date\");\n    }\n\n  }\n\n  return (\n    <div className=\"educationForm\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"schoolName\">\n          <label htmlFor=\"schoolNameInput\">School Name:</label>\n          <input \n            type=\"text\"\n            name=\"schoolName\"\n            required=\"required\" \n            value={schoolName.value}\n            onChange={schoolName.onChange}\n          />\n        </div>\n        <div className=\"courseTitle\">\n          <label htmlFor=\"courseTitleInput\">Course Title:</label>\n          <input \n            type=\"text\"\n            name=\"courseTitle\"\n            required=\"required\" \n            value={courseTitle.value}\n            onChange={courseTitle.onChange}\n          />\n        </div>\n        <div className=\"studyFromDate\">\n          <label htmlFor=\"studyFromInput\">From:</label>\n          <input \n            type=\"date\"\n            name=\"studyFromDate\"\n            required=\"required\"\n            max={maxDate}\n            value={studyFromDate.value}\n            onChange={studyFromDate.onChange}\n          />\n        </div>\n        <div className=\"studyToDate\">\n          <label htmlFor=\"studyToInput\">To:</label>\n          <input \n            type=\"date\"\n            name=\"studyToDate\"\n            required=\"required\"\n            max={maxDate}\n            value={studyToDate.value}\n            onChange={studyToDate.onChange}\n          />\n        </div>\n        <AddButton />\n      </form>\n    </div>\n  )\n}\n\nexport default EducationForm;","import React from 'react';\nimport { EditButton, ResubmitButton, DeleteButton } from './Buttons';\nimport dateValidator from '../utils/dateValidator';\n\n\nfunction EditExperience(props) {\n  const {\n    companyName,\n    positionTitle,\n    experienceFromDate,\n    experienceToDate,\n    responsibilities\n  } = props.experienceInfo;\n\n  return (\n    <div className=\"experienceForm\">\n      <form onSubmit={props.handleEditSubmit}>\n        <div className=\"companyName\">\n          <label htmlFor=\"companyNameInput\">Company Name: </label>\n          <input \n            type=\"text\"\n            name=\"companyName\"\n            required=\"required\"\n            value={companyName}\n            onChange={props.onChange}\n          />\n        </div>\n        <div className=\"positionTitle\">\n          <label htmlFor=\"positionTitleInput\">Position Title: </label>\n          <input \n            type=\"text\"\n            name=\"positionTitle\"\n            required=\"required\"\n            value={positionTitle}\n            onChange={props.onChange}\n          />\n        </div>\n        <div className=\"experienceFromDate\">\n          <label htmlFor=\"experienceFromInput\">From:</label>\n          <input \n            type=\"date\"\n            name=\"experienceFromDate\"\n            required=\"required\"\n            max={props.maxDate}\n            value={experienceFromDate}\n            onChange={props.onChange}\n          />\n        </div>\n        <div className=\"experienceToDate\">\n          <label htmlFor=\"experienceToInput\">To:</label>\n          <input \n            type=\"date\"\n            name=\"experienceToDate\"\n            required=\"required\"\n            max={props.maxDate}\n            value={experienceToDate}\n            onChange={props.onChange}\n          />\n        </div>\n        <div className=\"responsibilities\">\n          <label htmlFor=\"responsibilitiesInput\">Responsibilities: </label>\n          <textarea\n            name=\"responsibilities\"\n            required=\"required\"\n            value={responsibilities}\n            onChange={props.onChange} \n          />\n        </div>\n        <ResubmitButton />\n      </form>\n    </div>\n  );\n}\n\nclass PracticalExperienceDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      companyName: \"\",\n      positionTitle: \"\",\n      experienceFromDate: \"\",\n      experienceToDate: \"\",\n      responsibilities: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEditClick = this.handleEditClick.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(this.props.experienceInfo);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleEditClick() {\n    const state = Object.assign({}, this.state);\n    state.editClicked = true;\n\n    this.setState(state);\n  }\n\n  handleEditSubmit(event) {\n    event.preventDefault();\n    const validated = dateValidator(this.state.experienceFromDate, this.state.experienceToDate);\n\n    if (validated) {\n      this.props.onExperienceEdit(this.state);\n    } else {\n      alert(\"Please enter a valid date\");\n    }\n  }\n\n  handleDeleteClick() {\n    this.props.onExperienceDelete(this.state);\n  }\n\n  render() {\n    const maxDate = new Date().toISOString().split(\"T\")[0];\n\n    const {\n      companyName,\n      positionTitle,\n      experienceFromDate,\n      experienceToDate,\n      responsibilities,\n      editClicked\n    } = this.state;\n\n    if (editClicked) {\n      return (\n        <EditExperience \n          maxDate={maxDate}\n          onChange={this.handleChange}\n          experienceInfo={this.state}\n          handleEditSubmit={this.handleEditSubmit}\n        />\n      )\n    } else {\n      return (\n        <div className=\"experienceDisplay\">\n          <ul>\n            <li>Organization Name: {companyName}</li>\n            <li>Position Title: {positionTitle}</li>\n            <li>From: {experienceFromDate}</li>\n            <li>To: {experienceToDate}</li>\n            <li>Responsibilities: {responsibilities}</li>\n          </ul>\n          <div className=\"buttonsContainer\">\n            <EditButton handleEditClick={this.handleEditClick} />\n            <DeleteButton handleDeleteClick={this.handleDeleteClick} />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default PracticalExperienceDisplay;","import React from 'react';\nimport { AddButton }from './Buttons';\nimport uniqid from 'uniqid';\nimport dateValidator from '../utils/dateValidator';\n\n\nclass PracticalExperienceForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: uniqid(),\n      companyName: \"\",\n      positionTitle: \"\",\n      experienceFromDate: \"\",\n      experienceToDate: \"\",\n      responsibilities: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const validated = dateValidator(this.state.experienceFromDate, this.state.experienceToDate);\n\n    if (validated) {\n      this.props.onExperienceSubmit(this.state);\n\n      this.setState({\n        id: uniqid(),\n        companyName: \"\",\n        positionTitle: \"\",\n        experienceFromDate: \"\",\n        experienceToDate: \"\",\n        responsibilities: \"\"\n      })\n    } else {\n      alert(\"Please enter a valid date\");\n    }\n    \n  }\n\n  render() {\n    const maxDate = new Date().toISOString().split(\"T\")[0];\n\n    const {\n      companyName,\n      positionTitle,\n      experienceFromDate,\n      experienceToDate,\n      responsibilities\n    } = this.state;\n\n\n    return (\n      <div className=\"experienceForm\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"companyName\">\n            <label htmlFor=\"companyNameInput\">Company Name: </label>\n            <input \n              type=\"text\"\n              name=\"companyName\"\n              required=\"required\"\n              value={companyName}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"positionTitle\">\n            <label htmlFor=\"positionTitleInput\">Position Title: </label>\n            <input \n              type=\"text\"\n              name=\"positionTitle\"\n              required=\"required\"\n              value={positionTitle}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"experienceFromDate\">\n            <label htmlFor=\"experienceFromInput\">From:</label>\n            <input \n              type=\"date\"\n              name=\"experienceFromDate\"\n              required=\"required\"\n              max={maxDate}\n              value={experienceFromDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"experienceToDate\">\n            <label htmlFor=\"experienceToInput\">To:</label>\n            <input \n              type=\"date\"\n              name=\"experienceToDate\"\n              required=\"required\"\n              max={maxDate}\n              value={experienceToDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"responsibilities\">\n            <label htmlFor=\"responsibilitiesInput\">Responsibilities: </label>\n            <textarea\n              name=\"responsibilities\"\n              required=\"required\"\n              value={responsibilities}\n              onChange={this.handleChange} \n            />\n          </div>\n          <AddButton />\n        </form>\n      </div>\n    );\n\n  }\n}\n\nexport default PracticalExperienceForm;","import React from 'react';\nimport './styles/App.css';\nimport GeneralInfo from './components/GeneralInfo'\nimport EducationDisplay from './components/EducationDisplay'\nimport EducationForm from './components/EducationForm'\nimport PracticalExperienceDisplay from './components/PracticalExperienceDisplay'\nimport PracticalExperienceForm from './components/PracticalExperienceForm'\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      generalInfo: [],\n      infoSubmitted: false, \n      educationInfo: [],\n      experienceInfo: []\n    }\n\n    this.handleInfoSubmit = this.handleInfoSubmit.bind(this);\n\n    this.handleEducationSubmit = this.handleEducationSubmit.bind(this);\n    this.handleEducationEdit = this.handleEducationEdit.bind(this);\n    this.handleEducationDelete = this.handleEducationDelete.bind(this);\n\n    this.handleExperienceSubmit = this.handleExperienceSubmit.bind(this);\n    this.handleExperienceEdit = this.handleExperienceEdit.bind(this);\n    this.handleExperienceDelete = this.handleExperienceDelete.bind(this);\n  }\n\n  handleInfoSubmit(info, status) {\n    this.setState({\n      generalInfo: [info],\n      infoSubmitted: status\n    });\n  }\n\n  handleEducationSubmit(info) {\n    const state = this.state;\n\n    this.setState({\n      educationInfo: state.educationInfo.concat(info),\n    });\n  }\n\n  handleEducationEdit(info) {\n    const state = Object.assign({}, this.state);\n    const index = state.educationInfo.findIndex((edu => edu.id === info.id));\n    state.educationInfo[index] = info;\n    // state.educationInfo[index].editClicked = false;\n\n    this.setState({ state })\n  }\n\n  handleEducationDelete(info) {\n    const state = Object.assign({}, this.state);\n    const newEducationInfo = state.educationInfo.filter((edu => edu.id !== info.id));\n    \n    this.setState({\n      educationInfo: newEducationInfo,\n    })\n  }\n\n  handleExperienceSubmit(info) {\n    const state = this.state;\n\n    this.setState({\n      experienceInfo: state.experienceInfo.concat(info)\n    });\n  }\n\n  handleExperienceEdit(info) {\n    const state = Object.assign({}, this.state);\n    const index = state.experienceInfo.findIndex((exp => exp.id === info.id));\n    state.experienceInfo[index] = info;\n    state.experienceInfo[index].editClicked = false;\n\n    this.setState({ state })\n  }\n\n  handleExperienceDelete(info) {\n    const state = Object.assign({}, this.state);\n    const newExperienceInfo = state.experienceInfo.filter((exp => exp.id !== info.id));\n\n    this.setState({\n      experienceInfo: newExperienceInfo\n    })\n  }\n\n  render() {\n    const { \n      generalInfo, \n      infoSubmitted,\n      educationInfo,\n      experienceInfo,\n    } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"containerHeader\">\n          <h1>CV Builder</h1>\n        </div>\n        <GeneralInfo \n          info={generalInfo} \n          onInfoSubmit={this.handleInfoSubmit}\n          infoSubmitted={infoSubmitted}\n        />\n        <h2>Education</h2>\n        {educationInfo.length > 0 \n          ? educationInfo.map(education => (\n              <EducationDisplay\n                key={education.id}\n                educationInfo={education}\n                onEducationEdit={this.handleEducationEdit}\n                onEducationDelete={this.handleEducationDelete}\n              />\n          ))\n          : <p>Enter your education details below!</p>\n          }\n        <EducationForm \n          onEducationSubmit={this.handleEducationSubmit} \n        />\n        <h2>Practical Experience</h2>\n        {experienceInfo.length > 0\n          ? experienceInfo.map(experience => (\n              <PracticalExperienceDisplay\n                key={experience.id}\n                experienceInfo={experience}\n                onExperienceEdit={this.handleExperienceEdit}\n                onExperienceDelete={this.handleExperienceDelete}\n              />\n          ))\n          : <p>Enter your practical experience below!</p>\n          }\n        <PracticalExperienceForm \n          onExperienceSubmit={this.handleExperienceSubmit} \n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}