{"version":3,"sources":["components/AddButton.js","components/EditButton.js","components/GeneralInfo.js","components/EducationDisplay.js","components/EducationForm.js","components/PracticalExperienceDisplay.js","components/PracticalExperienceForm.js","App.js","index.js"],"names":["AddButton","className","type","React","Component","EditButton","props","onClick","this","handleEditClick","GeneralInfoForm","onSubmit","handleSubmit","htmlFor","name","value","onChange","handleChange","email","phone","GeneralInfoDisplay","handleEdit","GeneralInfo","state","bind","event","target","setState","preventDefault","onInfoSubmit","infoSubmitted","EditForm","educationInfo","schoolName","courseTitle","studyFromDate","studyToDate","handleEditSubmit","max","maxDate","EducationDisplay","id","editClicked","Object","assign","onEducationEdit","EducationForm","uniqid","onEducationSubmit","Date","toISOString","split","PracticalExperienceDisplay","companyName","positionTitle","experienceFromDate","experienceToDate","responsibilities","onExperienceSubmit","experienceInfo","info","PracticalExperienceForm","App","generalInfo","handleInfoSubmit","handleEducationSubmit","handleEducationEdit","handleExperienceSubmit","status","concat","index","findIndex","edu","length","map","education","experience","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0029451.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Buttons.css'\n\nclass AddButton extends React.Component {\n  render() {\n    return (\n      <div className=\"AddButton\">\n        <button type=\"submit\">Add</button>\n      </div>\n    );\n  }\n}\n\nexport default AddButton;","import React from 'react';\nimport '../styles/Buttons.css'\n\nclass EditButton extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <button onClick={this.props.handleEditClick}>Edit</button>\n    );\n  }\n}\n\nexport default EditButton;","import React from 'react';\nimport '../styles/GeneralInfo.css';\nimport AddButton from './AddButton';\nimport EditButton from './EditButton';\n\nfunction GeneralInfoForm(props) {\n  return (\n    <div className=\"generalInfoForm\">\n      <h2>General Info</h2>\n      <form onSubmit={props.handleSubmit}>\n        <div className=\"generalInfoName\">\n          <label htmlFor=\"nameInput\">Name: </label>\n          <input \n            type=\"text\" \n            name=\"name\" \n            value={props.name}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"generalInfoEmail\">\n          <label htmlFor=\"emailInput\">Email: </label>\n          <input \n            type=\"text\" \n            name=\"email\" \n            value={props.email}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"generalInfoPhone\">\n          <label htmlFor=\"PhoneInput\">Phone: </label>\n          <input \n            type=\"text\" \n            name=\"phone\" \n            value={props.phone}\n            onChange={props.handleChange}\n          />\n        </div>\n        <AddButton />\n      </form>\n    </div>\n  )\n}\n\nfunction GeneralInfoDisplay(props) {\n  return (\n    <div className=\"generalInfoDisplay\">\n      <h2>General Info</h2>\n      <ul>\n        <li>Name: {props.name}</li>\n        <li>Email: {props.email}</li>\n        <li>Phone: {props.phone}</li>\n      </ul>\n      <EditButton handleEditClick={props.handleEdit}/>\n    </div>\n  );\n}\n\nclass GeneralInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onInfoSubmit(this.state, true);\n  }\n\n  handleEdit() {\n    this.props.onInfoSubmit(this.state, false);\n  }\n\n  render() {\n    const { name, email, phone } = this.state;\n\n    if (this.props.infoSubmitted) {\n      return (\n        <GeneralInfoDisplay \n        name={name}\n        email={email}\n        phone={phone}\n        handleEdit={this.handleEdit}\n        />\n      );\n    } else {\n      return (\n        <GeneralInfoForm \n        name={name} \n        email={email}\n        phone={phone}\n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n        />\n      );\n    }\n  }\n}\n\nexport default GeneralInfo;","import React from 'react';\nimport '../styles/Education.css';\nimport EditButton from './EditButton';\nimport AddButton from './AddButton';\n\n\nfunction EditForm(props) {\n  const { schoolName, courseTitle, studyFromDate, studyToDate } = props.educationInfo;\n\n  return (\n    <div className=\"educationForm\">\n    <form onSubmit={props.handleEditSubmit}>\n      <div className=\"schoolName\">\n        <label htmlFor=\"schoolNameInput\">School Name:</label>\n        <input \n          type=\"text\"\n          name=\"schoolName\"\n          value={schoolName}\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"courseTitle\">\n        <label htmlFor=\"courseTitleInput\">Course Title:</label>\n        <input \n          type=\"text\"\n          name=\"courseTitle\"\n          value={courseTitle}\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"studyFromDate\">\n        <label htmlFor=\"studyFromInput\">From:</label>\n        <input \n          type=\"date\"\n          name=\"studyFromDate\"\n          max={props.maxDate}\n          value={studyFromDate}\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"studyToDate\">\n        <label htmlFor=\"studyToInput\">To:</label>\n        <input \n          type=\"date\"\n          name=\"studyToDate\"\n          max={props.maxDate}\n          value={studyToDate}\n          onChange={props.onChange}\n        />\n      </div>\n      <AddButton />\n    </form>\n  </div>\n  )\n}\n\nclass EducationDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      schoolName: \"\",\n      courseTitle: \"\",\n      studyFromDate: \"\",\n      studyToDate: \"\",\n      editClicked: false\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEditClick = this.handleEditClick.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { \n      id, \n      schoolName, \n      courseTitle, \n      studyFromDate, \n      studyToDate,\n      editClicked\n    } = this.props.educationInfo\n\n    // let { editClicked } = this.props.educationInfo;\n\n    // if (editClicked === true ) {\n    //   editClicked = false;\n    // }\n\n    this.setState({\n      id: id,\n      schoolName: schoolName,\n      courseTitle: courseTitle,\n      studyFromDate: studyFromDate,\n      studyToDate: studyToDate,\n      editClicked: editClicked\n    })\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleEditClick() {\n    const state = Object.assign({}, this.state);\n    state.editClicked = true;\n\n    this.setState({\n      id: state.id,\n      schoolName: state.schoolName,\n      courseTitle: state.courseTitle,\n      studyFromDate: state.studyFromDate,\n      studyToDate: state.studyToDate,\n      editClicked: state.editClicked\n    });\n  }\n\n  handleEditSubmit(event) {\n    event.preventDefault();\n    this.props.onEducationEdit(this.state);\n  }\n\n  render() {\n    const { \n      schoolName, \n      courseTitle, \n      studyFromDate,\n      studyToDate,\n      editClicked \n    } = this.state;\n\n    if (editClicked) {\n      return (\n        <EditForm\n          onChange={this.handleChange} \n          educationInfo={this.state}\n          handleEditSubmit={this.handleEditSubmit}\n        />\n      )\n    } else {\n      return (\n        <div className=\"educationDisplay\">\n          <ul>\n            <li>School Name: {schoolName}</li>\n            <li>Course Title: {courseTitle}</li>\n            <li>From: {studyFromDate}</li>\n            <li>To: {studyToDate}</li>\n          </ul>\n          <div className=\"buttonsContainer\">\n            <EditButton handleEditClick={this.handleEditClick} />\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default EducationDisplay;","import React from 'react';\nimport '../styles/Education.css';\nimport AddButton from './AddButton';\nimport uniqid from 'uniqid';\n\n\nclass EducationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: uniqid(),\n      schoolName: \"\",\n      courseTitle: \"\",\n      studyFromDate: \"\",\n      studyToDate: \"\",\n      editClicked: false\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onEducationSubmit(this.state);\n\n    this.setState({\n      id: uniqid(),\n      schoolName: \"\",\n      courseTitle: \"\",\n      studyFromDate: \"\",\n      studyToDate: \"\",\n      editClicked: false\n    })\n  }\n\n  render() {\n    const maxDate = new Date().toISOString().split(\"T\")[0];\n\n    const { \n      schoolName, \n      courseTitle, \n      studyFromDate,\n      studyToDate,\n    } = this.state;\n\n    return (\n      <div className=\"educationForm\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"schoolName\">\n            <label htmlFor=\"schoolNameInput\">School Name:</label>\n            <input \n              type=\"text\"\n              name=\"schoolName\"\n              value={schoolName}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"courseTitle\">\n            <label htmlFor=\"courseTitleInput\">Course Title:</label>\n            <input \n              type=\"text\"\n              name=\"courseTitle\"\n              value={courseTitle}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"studyFromDate\">\n            <label htmlFor=\"studyFromInput\">From:</label>\n            <input \n              type=\"date\"\n              name=\"studyFromDate\"\n              max={maxDate}\n              value={studyFromDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"studyToDate\">\n            <label htmlFor=\"studyToInput\">To:</label>\n            <input \n              type=\"date\"\n              name=\"studyToDate\"\n              max={maxDate}\n              value={studyToDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <AddButton />\n        </form>\n      </div>\n    )\n\n  }\n}\n\nexport default EducationForm;","import React from 'react';\nimport '../styles/PracticalExperience.css'\nimport EditButton from './EditButton';\n\nclass PracticalExperienceDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      companyName: \"\",\n      positionTitle: \"\",\n      experienceFromDate: \"\",\n      experienceToDate: \"\",\n      responsibilities: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleEdit() {\n    this.props.onExperienceSubmit(this.state, false);\n  }\n\n  render() {\n    const {\n      companyName,\n      positionTitle,\n      experienceFromDate,\n      experienceToDate,\n      responsibilities\n    } = this.props.experienceInfo.info;\n\n    return (\n      <div className=\"experienceDisplay\">\n        <h2>Experience</h2>\n        <ul>\n          <li>Organization Name: {companyName}</li>\n          <li>Position Title: {positionTitle}</li>\n          <li>From: {experienceFromDate}</li>\n          <li>To: {experienceToDate}</li>\n          <li>Responsibilities: {responsibilities}</li>\n        </ul>\n        <div className=\"buttonsContainer\">\n          <EditButton handleEditClick={this.handleEdit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PracticalExperienceDisplay;","import React from 'react';\nimport '../styles/PracticalExperience.css'\nimport AddButton from './AddButton';\n\n\nclass PracticalExperienceForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      companyName: \"\",\n      positionTitle: \"\",\n      experienceFromDate: \"\",\n      experienceToDate: \"\",\n      responsibilities: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onExperienceSubmit(this.state, true);\n    this.setState({\n      companyName: \"\",\n      positionTitle: \"\",\n      experienceFromDate: \"\",\n      experienceToDate: \"\",\n      responsibilities: \"\"\n    })\n  }\n\n  render() {\n    const maxDate = new Date().toISOString().split(\"T\")[0];\n    const {\n      companyName,\n      positionTitle,\n      experienceFromDate,\n      experienceToDate,\n      responsibilities\n    } = this.state;\n\n\n    return (\n      <div className=\"experienceForm\">\n        <h2>Practical Experience</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"companyName\">\n            <label htmlFor=\"companyNameInput\">Company Name: </label>\n            <input \n              type=\"text\"\n              name=\"companyName\"\n              value={companyName}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"positionTitle\">\n            <label htmlFor=\"positionTitleInput\">Position Title: </label>\n            <input \n              type=\"text\"\n              name=\"positionTitle\"\n              value={positionTitle}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"experienceFromDate\">\n            <label htmlFor=\"experienceFromInput\">From:</label>\n            <input \n              type=\"date\"\n              name=\"experienceFromDate\"\n              max={maxDate}\n              value={experienceFromDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"experienceToDate\">\n            <label htmlFor=\"experienceToInput\">To:</label>\n            <input \n              type=\"date\"\n              name=\"experienceToDate\"\n              max={maxDate}\n              value={experienceToDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"responsibilities\">\n            <label htmlFor=\"responsibilitiesInput\">Responsibilities: </label>\n            <textarea\n              name=\"responsibilities\"\n              value={responsibilities}\n              onChange={this.handleChange} \n            />\n          </div>\n          <AddButton />\n        </form>\n      </div>\n    );\n\n  }\n}\n\nexport default PracticalExperienceForm;","import React from 'react';\nimport './styles/App.css';\nimport uniqid from 'uniqid';\nimport GeneralInfo from './components/GeneralInfo'\nimport EducationDisplay from './components/EducationDisplay'\nimport EducationForm from './components/EducationForm'\nimport PracticalExperienceDisplay from './components/PracticalExperienceDisplay'\nimport PracticalExperienceForm from './components/PracticalExperienceForm'\n\n// Edit not working\n// Add validation for dates e.g. 'to' cannot be less than 'from'\n// No blank fields when submitting\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      generalInfo: [],\n      infoSubmitted: false, \n      educationInfo: [],\n      experienceInfo: []\n    }\n\n    this.handleInfoSubmit = this.handleInfoSubmit.bind(this);\n    this.handleEducationSubmit = this.handleEducationSubmit.bind(this);\n    this.handleEducationEdit = this.handleEducationEdit.bind(this);\n    this.handleExperienceSubmit = this.handleExperienceSubmit.bind(this);\n  }\n\n  handleInfoSubmit(info, status) {\n    const state = this.state;\n\n    this.setState({\n      generalInfo: [info],\n      infoSubmitted: status,\n      educationInfo: state.educationInfo,\n      experienceInfo: state.experienceInfo\n    });\n  }\n\n  handleEducationSubmit(info) {\n    const state = this.state;\n\n    this.setState({\n      generalInfo: state.generalInfo,\n      infoSubmitted: state.infoSubmitted,\n      educationInfo: state.educationInfo.concat(info),\n      experienceInfo: state.experienceInfo\n    });\n  }\n\n  handleEducationEdit(info) {\n    const state = Object.assign({}, this.state);\n    const index = state.educationInfo.findIndex((edu => edu.id === info.id));\n    state.educationInfo[index] = info;\n    state.educationInfo[index].editClicked = false;\n\n    this.setState({\n      generalInfo: state.generalInfo,\n      infoSubmitted: state.infoSubmitted,\n      educationInfo: state.educationInfo,\n      experienceInfo: state.experienceInfo\n    })\n  }\n\n  // handleEducationDelete(deleteInfo) {\n  //   const stateCopy = this.state;\n  //   const {educationInfo: oldInfo} = stateCopy;\n  //   const educationInfo = oldInfo.filter((info) => info.id !== deleteInfo.id);\n  //   this.setState({\n  //     ...stateCopy,\n  //     educationInfo\n  //   })\n  // }\n\n  handleExperienceSubmit(info) {\n    const state = this.state;\n\n    this.setState({\n      generalInfo: state.generalInfo,\n      infoSubmitted: state.infoSubmitted,\n      educationInfo: state.educationInfo,\n      experienceInfo: state.experienceInfo.concat(info)\n    });\n  }\n\n  render() {\n    const { \n      generalInfo, \n      infoSubmitted,\n      educationInfo,\n      experienceInfo,\n    } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"containerHeader\">\n          <h1>CV Builder</h1>\n        </div>\n        <GeneralInfo \n          info={generalInfo} \n          onInfoSubmit={this.handleInfoSubmit}\n          infoSubmitted={infoSubmitted}\n        />\n        <h2>Education</h2>\n        {educationInfo.length > 0 \n          ? educationInfo.map(education => (\n              <EducationDisplay\n                key={education.id}\n                educationInfo={education}\n                onEducationEdit={this.handleEducationEdit}\n              />\n          ))\n          : <p>Enter your education details below!</p>\n          }\n        <EducationForm \n          educationInfo={educationInfo}\n          onEducationSubmit={this.handleEducationSubmit} \n          onEducationEdit={this.handleEducationEdit}\n        />\n        <h2>Practical Experience</h2>\n        {experienceInfo.length > 0\n          ? experienceInfo.map(experience => (\n              <PracticalExperienceDisplay\n                key={uniqid()}\n                experienceInfo={experience}\n                onExperienceSubmit={this.handleExperienceSubmit}\n              />\n          ))\n          : <p>Enter your practical experience below!</p>\n          }\n        <PracticalExperienceForm onExperienceSubmit={this.handleExperienceSubmit} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}