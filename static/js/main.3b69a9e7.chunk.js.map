{"version":3,"sources":["components/SubmitButton.js","components/EditButton.js","components/GeneralInfo.js","components/Education.js","components/PracticalExperience.js","App.js","index.js"],"names":["SubmitButton","className","type","React","Component","EditButton","props","onClick","this","handleEditClick","GeneralInfoForm","onSubmit","handleSubmit","htmlFor","name","value","onChange","handleChange","email","phone","GeneralInfoDisplay","handleEdit","GeneralInfo","state","bind","event","target","setState","preventDefault","onInfoSubmit","infoSubmitted","EducationForm","maxDate","Date","toISOString","split","schoolName","courseTitle","max","studyFromDate","studyToDate","EducationDisplay","Education","onEducationSubmit","educationSubmitted","PracticalExperienceForm","companyName","positionTitle","experienceFromDate","experienceToDate","responsibilities","PracticalExperienceDisplay","PracticalExperience","onExperienceSubmit","experienceSubmitted","App","generalInfo","educationInfo","experienceInfo","handleInfoSubmit","handleEducationSubmit","handleExperienceSubmit","info","status","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b69a9e7.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Buttons.css'\n\nclass SubmitButton extends React.Component {\n  render() {\n    return (\n      <div className=\"submitButton\">\n        <button type=\"submit\">Submit</button>\n      </div>\n    );\n  }\n}\n\nexport default SubmitButton;","import React from 'react';\nimport '../styles/Buttons.css'\n\nclass EditButton extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <button onClick={this.props.handleEditClick}>Edit</button>\n    );\n  }\n}\n\nexport default EditButton;","import React from 'react';\nimport '../styles/GeneralInfo.css';\nimport SubmitButton from './SubmitButton';\nimport EditButton from './EditButton';\n\nfunction GeneralInfoForm(props) {\n  return (\n    <div className=\"generalInfoForm\">\n      <h2>General Info</h2>\n      <form onSubmit={props.handleSubmit}>\n        <div className=\"generalInfoName\">\n          <label htmlFor=\"nameInput\">Name: </label>\n          <input \n            type=\"text\" \n            name=\"name\" \n            value={props.name}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"generalInfoEmail\">\n          <label htmlFor=\"emailInput\">Email: </label>\n          <input \n            type=\"text\" \n            name=\"email\" \n            value={props.email}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"generalInfoPhone\">\n          <label htmlFor=\"PhoneInput\">Phone: </label>\n          <input \n            type=\"text\" \n            name=\"phone\" \n            value={props.phone}\n            onChange={props.handleChange}\n          />\n        </div>\n        <SubmitButton />\n      </form>\n    </div>\n  )\n}\n\nfunction GeneralInfoDisplay(props) {\n  return (\n    <div className=\"generalInfoDisplay\">\n      <h2>General Info</h2>\n      <ul>\n        <li>Name: {props.name}</li>\n        <li>Email: {props.email}</li>\n        <li>Phone: {props.phone}</li>\n      </ul>\n      <EditButton handleEditClick={props.handleEdit}/>\n    </div>\n  );\n}\n\nclass GeneralInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onInfoSubmit(this.state, true);\n  }\n\n  handleEdit() {\n    this.props.onInfoSubmit(this.state, false);\n  }\n\n  render() {\n    const { name, email, phone } = this.state;\n\n    if (this.props.infoSubmitted) {\n      return (\n        <GeneralInfoDisplay \n        name={name}\n        email={email}\n        phone={phone}\n        handleEdit={this.handleEdit}\n        />\n      );\n    } else {\n      return (\n        <GeneralInfoForm \n        name={name} \n        email={email}\n        phone={phone}\n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n        />\n      );\n    }\n  }\n}\n\nexport default GeneralInfo;","import React from 'react';\nimport '../styles/Education.css';\nimport SubmitButton from './SubmitButton';\nimport EditButton from './EditButton';\n\nfunction EducationForm(props) {\n  const maxDate = new Date().toISOString().split(\"T\")[0];\n\n  return (\n    <div className=\"educationForm\">\n      <h2>Education</h2>\n      <form onSubmit={props.handleSubmit}>\n        <div className=\"schoolName\">\n          <label htmlFor=\"schoolNameInput\">School Name:</label>\n          <input \n            type=\"text\"\n            name=\"schoolName\"\n            value={props.schoolName}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"courseTitle\">\n          <label htmlFor=\"courseTitleInput\">Course Title:</label>\n          <input \n            type=\"text\"\n            name=\"courseTitle\"\n            value={props.courseTitle}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"studyFromDate\">\n          <label htmlFor=\"studyFromInput\">From:</label>\n          <input \n            type=\"date\"\n            name=\"studyFromDate\"\n            max={maxDate}\n            value={props.studyFromDate}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"studyToDate\">\n          <label htmlFor=\"studyToInput\">To:</label>\n          <input \n            type=\"date\"\n            name=\"studyToDate\"\n            max={maxDate}\n            value={props.studyToDate}\n            onChange={props.handleChange}\n          />\n        </div>\n        <SubmitButton />\n      </form>\n    </div>\n  )\n}\n\nfunction EducationDisplay(props) {\n  return (\n    <div className=\"educationDisplay\">\n    <h2>Education</h2>\n    <ul>\n      <li>School Name: {props.schoolName}</li>\n      <li>Course Title: {props.courseTitle}</li>\n      <li>From: {props.studyFromDate}</li>\n      <li>To: {props.studyToDate}</li>\n    </ul>\n    <EditButton handleEditClick={props.handleEdit} />\n  </div>\n  )\n}\n\nclass Education extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      schoolName: \"\",\n      courseTitle: \"\",\n      studyFromDate: \"\",\n      studyToDate: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onEducationSubmit(this.state, true);\n  }\n\n  handleEdit() {\n    this.props.onEducationSubmit(this.state, false);\n  }\n\n  render() {\n    const { \n      schoolName, \n      courseTitle, \n      studyFromDate,\n      studyToDate \n    } = this.state;\n\n    if (this.props.educationSubmitted) {\n      return (\n        <EducationDisplay \n          schoolName={schoolName}\n          courseTitle={courseTitle}\n          studyFromDate={studyFromDate}\n          studyToDate={studyToDate}\n          handleEdit={this.handleEdit}\n        />\n      );\n    } else {\n      return (\n        <EducationForm \n          schoolName={schoolName}\n          courseTitle={courseTitle}\n          studyFromDate={studyFromDate}\n          studyToDate={studyToDate}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n        />\n      );\n    }\n  }\n}\n\nexport default Education;","import React from 'react';\nimport '../styles/PracticalExperience.css'\nimport SubmitButton from './SubmitButton';\nimport EditButton from './EditButton';\n\nfunction PracticalExperienceForm(props) {\n  const maxDate = new Date().toISOString().split(\"T\")[0];\n  \n  return (\n    <div className=\"experienceForm\">\n      <h2>Practical Experience</h2>\n      <form onSubmit={props.handleSubmit}>\n        <div className=\"companyName\">\n          <label htmlFor=\"companyNameInput\">Company Name: </label>\n          <input \n            type=\"text\"\n            name=\"companyName\"\n            value={props.companyName}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"positionTitle\">\n          <label htmlFor=\"positionTitleInput\">Position Title: </label>\n          <input \n            type=\"text\"\n            name=\"positionTitle\"\n            value={props.positionTitle}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"experienceFromDate\">\n          <label htmlFor=\"experienceFromInput\">From:</label>\n          <input \n            type=\"date\"\n            name=\"experienceFromDate\"\n            max={maxDate}\n            value={props.experienceFromDate}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"experienceToDate\">\n          <label htmlFor=\"experienceToInput\">To:</label>\n          <input \n            type=\"date\"\n            name=\"experienceToDate\"\n            max={maxDate}\n            value={props.experienceToDate}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"responsibilities\">\n          <label htmlFor=\"responsibilitiesInput\">Responsibilities: </label>\n          <textarea\n            name=\"responsibilities\"\n            value={props.responsibilities}\n            onChange={props.handleChange} \n          />\n        </div>\n        <SubmitButton />\n      </form>\n    </div>\n  );\n}\n\nfunction PracticalExperienceDisplay(props) {\n  return (\n    <div className=\"experienceDisplay\">\n      <h2>Experience</h2>\n      <ul>\n        <li>Organization Name: {props.companyName}</li>\n        <li>Position Title: {props.positionTitle}</li>\n        <li>From: {props.experienceFromDate}</li>\n        <li>To: {props.experienceToDate}</li>\n        <li>Responsibilities: {props.responsibilities}</li>\n      </ul>\n      <EditButton handleEditClick={props.handleEdit} />\n    </div>\n  );\n}\n\nclass PracticalExperience extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      companyName: \"\",\n      positionTitle: \"\",\n      experienceFromDate: \"\",\n      experienceToDate: \"\",\n      responsibilities: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onExperienceSubmit(this.state, true);\n  }\n\n  handleEdit() {\n    this.props.onExperienceSubmit(this.state, false);\n  }\n\n  render() {\n    const {\n      companyName,\n      positionTitle,\n      experienceFromDate,\n      experienceToDate,\n      responsibilities\n    } = this.state;\n\n    if (this.props.experienceSubmitted) {\n      return (\n        <PracticalExperienceDisplay \n          companyName={companyName}\n          positionTitle={positionTitle}\n          experienceFromDate={experienceFromDate}\n          experienceToDate={experienceToDate}\n          responsibilities={responsibilities}\n          handleEdit={this.handleEdit}\n        />\n      );\n    } else {\n      return (\n        <PracticalExperienceForm \n          companyName={companyName}\n          positionTitle={positionTitle}\n          experienceFromDate={experienceFromDate}\n          experienceToDate={experienceToDate}\n          responsibilities={responsibilities}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n        />\n      );\n    }\n  }\n}\n\nexport default PracticalExperience;","import React from 'react';\nimport './styles/App.css';\nimport GeneralInfo from './components/GeneralInfo'\nimport Education from './components/Education'\nimport PracticalExperience from './components/PracticalExperience'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      generalInfo: {\n        name: \"\",\n        email: \"\",\n        phone: \"\"\n      }, \n      infoSubmitted: false,\n      educationInfo: {\n        schoolName: \"\",\n        courseTitle: \"\",\n        studyFromDate: \"\",\n        studyToDate: \"\"\n      },\n      educationSubmitted: false,\n      experienceInfo: {\n        companyName: \"\",\n        positionTitle: \"\",\n        experienceFromDate: \"\",\n        experienceToDate: \"\",\n        responsibilities: \"\"\n      },\n      experienceSubmitted: false\n    }\n\n    this.handleInfoSubmit = this.handleInfoSubmit.bind(this);\n    this.handleEducationSubmit = this.handleEducationSubmit.bind(this);\n    this.handleExperienceSubmit = this.handleExperienceSubmit.bind(this);\n  }\n\n  handleInfoSubmit(info, status) {\n    const state = this.state;\n\n    this.setState({\n      generalInfo: { info },\n      infoSubmitted: status,\n      educationInfo: state.educationInfo,\n      educationSubmitted: state.educationSubmitted,\n      experienceInfo: state.experienceInfo,\n      experienceSubmitted: state.experienceSubmitted\n    });\n  }\n\n  handleEducationSubmit(info, status) {\n    const state = this.state;\n\n    this.setState({\n      generalInfo: state.generalInfo,\n      infoSubmitted: state.infoSubmitted,\n      educationInfo: { info },\n      educationSubmitted: status,\n      experienceInfo: state.experienceInfo,\n      experienceSubmitted: state.experienceSubmitted\n    });\n  }\n\n  handleExperienceSubmit(info, status) {\n    const state = this.state;\n\n    this.setState({\n      generalInfo: state.generalInfo,\n      infoSubmitted: state.infoSubmitted,\n      educationInfo: state.educationInfo,\n      educationSubmitted: state.educationSubmitted,\n      experienceInfo: { info }, \n      experienceSubmitted: status\n    });\n  }\n\n  render() {\n    const { \n      generalInfo, \n      infoSubmitted,\n      educationInfo,\n      educationSubmitted,\n      experienceInfo,\n      experienceSubmitted \n    } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"containerHeader\">\n          <h1>CV Builder</h1>\n        </div>\n        <GeneralInfo \n          info={generalInfo} \n          onInfoSubmit={this.handleInfoSubmit}\n          infoSubmitted={infoSubmitted}\n        />\n        <Education \n          educationInfo={educationInfo}\n          onEducationSubmit={this.handleEducationSubmit}\n          educationSubmitted={educationSubmitted}\n        />\n        <PracticalExperience \n          experienceInfo={experienceInfo}\n          onExperienceSubmit={this.handleExperienceSubmit}\n          experienceSubmitted={experienceSubmitted}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}