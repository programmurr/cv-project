{"version":3,"sources":["components/AddButton.js","components/EditButton.js","components/GeneralInfo.js","components/EducationDisplay.js","components/EducationForm.js","components/PracticalExperienceDisplay.js","components/PracticalExperienceForm.js","App.js","index.js"],"names":["AddButton","className","type","React","Component","EditButton","props","onClick","this","handleEditClick","GeneralInfoForm","onSubmit","handleSubmit","htmlFor","name","value","onChange","handleChange","email","phone","GeneralInfoDisplay","handleEdit","GeneralInfo","state","bind","event","target","setState","preventDefault","onInfoSubmit","infoSubmitted","EducationDisplay","schoolName","courseTitle","studyFromDate","studyToDate","onEducationSubmit","console","log","educationInfo","info","Education","maxDate","Date","toISOString","split","max","PracticalExperienceDisplay","companyName","positionTitle","experienceFromDate","experienceToDate","responsibilities","onExperienceSubmit","experienceInfo","PracticalExperienceForm","App","generalInfo","handleInfoSubmit","handleEducationSubmit","handleExperienceSubmit","status","concat","length","map","education","uniqid","EducationForm","experience","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1638108a.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Buttons.css'\n\nclass AddButton extends React.Component {\n  render() {\n    return (\n      <div className=\"AddButton\">\n        <button type=\"submit\">Add</button>\n      </div>\n    );\n  }\n}\n\nexport default AddButton;","import React from 'react';\nimport '../styles/Buttons.css'\n\nclass EditButton extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <button onClick={this.props.handleEditClick}>Edit</button>\n    );\n  }\n}\n\nexport default EditButton;","import React from 'react';\nimport '../styles/GeneralInfo.css';\nimport AddButton from './AddButton';\nimport EditButton from './EditButton';\n\nfunction GeneralInfoForm(props) {\n  return (\n    <div className=\"generalInfoForm\">\n      <h2>General Info</h2>\n      <form onSubmit={props.handleSubmit}>\n        <div className=\"generalInfoName\">\n          <label htmlFor=\"nameInput\">Name: </label>\n          <input \n            type=\"text\" \n            name=\"name\" \n            value={props.name}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"generalInfoEmail\">\n          <label htmlFor=\"emailInput\">Email: </label>\n          <input \n            type=\"text\" \n            name=\"email\" \n            value={props.email}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"generalInfoPhone\">\n          <label htmlFor=\"PhoneInput\">Phone: </label>\n          <input \n            type=\"text\" \n            name=\"phone\" \n            value={props.phone}\n            onChange={props.handleChange}\n          />\n        </div>\n        <AddButton />\n      </form>\n    </div>\n  )\n}\n\nfunction GeneralInfoDisplay(props) {\n  return (\n    <div className=\"generalInfoDisplay\">\n      <h2>General Info</h2>\n      <ul>\n        <li>Name: {props.name}</li>\n        <li>Email: {props.email}</li>\n        <li>Phone: {props.phone}</li>\n      </ul>\n      <EditButton handleEditClick={props.handleEdit}/>\n    </div>\n  );\n}\n\nclass GeneralInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onInfoSubmit(this.state, true);\n  }\n\n  handleEdit() {\n    this.props.onInfoSubmit(this.state, false);\n  }\n\n  render() {\n    const { name, email, phone } = this.state;\n\n    if (this.props.infoSubmitted) {\n      return (\n        <GeneralInfoDisplay \n        name={name}\n        email={email}\n        phone={phone}\n        handleEdit={this.handleEdit}\n        />\n      );\n    } else {\n      return (\n        <GeneralInfoForm \n        name={name} \n        email={email}\n        phone={phone}\n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n        />\n      );\n    }\n  }\n}\n\nexport default GeneralInfo;","import React from 'react';\nimport '../styles/Education.css';\nimport EditButton from './EditButton';\n\n\nclass EducationDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      schoolName: \"\",\n      courseTitle: \"\",\n      studyFromDate: \"\",\n      studyToDate: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleEdit() {\n    this.props.onEducationSubmit(this.state);\n  }\n\n  render() {\n    console.log(this.props.educationInfo.info);\n    const { \n      schoolName, \n      courseTitle, \n      studyFromDate,\n      studyToDate \n    } = this.props.educationInfo.info;\n\n    return (\n      <div className=\"educationDisplay\">\n        <ul>\n          <li>School Name: {schoolName}</li>\n          <li>Course Title: {courseTitle}</li>\n          <li>From: {studyFromDate}</li>\n          <li>To: {studyToDate}</li>\n        </ul>\n        <div className=\"buttonsContainer\">\n          <EditButton handleEditClick={this.handleEdit} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EducationDisplay;","import React from 'react';\nimport '../styles/Education.css';\nimport AddButton from './AddButton';\n\n\nclass Education extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      schoolName: \"\",\n      courseTitle: \"\",\n      studyFromDate: \"\",\n      studyToDate: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onEducationSubmit(this.state);\n    this.setState({\n      schoolName: \"\",\n      courseTitle: \"\",\n      studyFromDate: \"\",\n      studyToDate: \"\"\n    })\n  }\n\n  render() {\n    const maxDate = new Date().toISOString().split(\"T\")[0];\n\n    const { \n      schoolName, \n      courseTitle, \n      studyFromDate,\n      studyToDate \n    } = this.state;\n\n    return (\n      <div className=\"educationForm\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"schoolName\">\n            <label htmlFor=\"schoolNameInput\">School Name:</label>\n            <input \n              type=\"text\"\n              name=\"schoolName\"\n              value={schoolName}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"courseTitle\">\n            <label htmlFor=\"courseTitleInput\">Course Title:</label>\n            <input \n              type=\"text\"\n              name=\"courseTitle\"\n              value={courseTitle}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"studyFromDate\">\n            <label htmlFor=\"studyFromInput\">From:</label>\n            <input \n              type=\"date\"\n              name=\"studyFromDate\"\n              max={maxDate}\n              value={studyFromDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"studyToDate\">\n            <label htmlFor=\"studyToInput\">To:</label>\n            <input \n              type=\"date\"\n              name=\"studyToDate\"\n              max={maxDate}\n              value={studyToDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <AddButton />\n        </form>\n      </div>\n    )\n\n  }\n}\n\nexport default Education;","import React from 'react';\nimport '../styles/PracticalExperience.css'\nimport EditButton from './EditButton';\n\nclass PracticalExperienceDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      companyName: \"\",\n      positionTitle: \"\",\n      experienceFromDate: \"\",\n      experienceToDate: \"\",\n      responsibilities: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleEdit() {\n    this.props.onExperienceSubmit(this.state, false);\n  }\n\n  render() {\n    const {\n      companyName,\n      positionTitle,\n      experienceFromDate,\n      experienceToDate,\n      responsibilities\n    } = this.props.experienceInfo.info;\n\n    return (\n      <div className=\"experienceDisplay\">\n        <h2>Experience</h2>\n        <ul>\n          <li>Organization Name: {companyName}</li>\n          <li>Position Title: {positionTitle}</li>\n          <li>From: {experienceFromDate}</li>\n          <li>To: {experienceToDate}</li>\n          <li>Responsibilities: {responsibilities}</li>\n        </ul>\n        <div className=\"buttonsContainer\">\n          <EditButton handleEditClick={this.handleEdit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PracticalExperienceDisplay;","import React from 'react';\nimport '../styles/PracticalExperience.css'\nimport AddButton from './AddButton';\n\n\nclass PracticalExperienceForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      companyName: \"\",\n      positionTitle: \"\",\n      experienceFromDate: \"\",\n      experienceToDate: \"\",\n      responsibilities: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onExperienceSubmit(this.state, true);\n    this.setState({\n      companyName: \"\",\n      positionTitle: \"\",\n      experienceFromDate: \"\",\n      experienceToDate: \"\",\n      responsibilities: \"\"\n    })\n  }\n\n  render() {\n    const maxDate = new Date().toISOString().split(\"T\")[0];\n    const {\n      companyName,\n      positionTitle,\n      experienceFromDate,\n      experienceToDate,\n      responsibilities\n    } = this.state;\n\n\n    return (\n      <div className=\"experienceForm\">\n        <h2>Practical Experience</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"companyName\">\n            <label htmlFor=\"companyNameInput\">Company Name: </label>\n            <input \n              type=\"text\"\n              name=\"companyName\"\n              value={companyName}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"positionTitle\">\n            <label htmlFor=\"positionTitleInput\">Position Title: </label>\n            <input \n              type=\"text\"\n              name=\"positionTitle\"\n              value={positionTitle}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"experienceFromDate\">\n            <label htmlFor=\"experienceFromInput\">From:</label>\n            <input \n              type=\"date\"\n              name=\"experienceFromDate\"\n              max={maxDate}\n              value={experienceFromDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"experienceToDate\">\n            <label htmlFor=\"experienceToInput\">To:</label>\n            <input \n              type=\"date\"\n              name=\"experienceToDate\"\n              max={maxDate}\n              value={experienceToDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"responsibilities\">\n            <label htmlFor=\"responsibilitiesInput\">Responsibilities: </label>\n            <textarea\n              name=\"responsibilities\"\n              value={responsibilities}\n              onChange={this.handleChange} \n            />\n          </div>\n          <AddButton />\n        </form>\n      </div>\n    );\n\n  }\n}\n\nexport default PracticalExperienceForm;","import React from 'react';\nimport './styles/App.css';\nimport uniqid from 'uniqid';\nimport GeneralInfo from './components/GeneralInfo'\nimport EducationDisplay from './components/EducationDisplay'\nimport EducationForm from './components/EducationForm'\nimport PracticalExperienceDisplay from './components/PracticalExperienceDisplay'\nimport PracticalExperienceForm from './components/PracticalExperienceForm'\n\n// refactor App.render() functions so map() takes place outside of render\n// Work on 'edit' functionality\n// I think each component needs to be given an id when their form is submitted\n// Add validation for dates e.g. 'to' cannot be less than 'from'\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      generalInfo: [],\n      infoSubmitted: false, \n      educationInfo: [],\n      experienceInfo: []\n    }\n\n    this.handleInfoSubmit = this.handleInfoSubmit.bind(this);\n    this.handleEducationSubmit = this.handleEducationSubmit.bind(this);\n    this.handleExperienceSubmit = this.handleExperienceSubmit.bind(this);\n  }\n\n  handleInfoSubmit(info, status) {\n    const state = this.state;\n\n    this.setState({\n      generalInfo: info,\n      infoSubmitted: status,\n      educationInfo: state.educationInfo,\n      experienceInfo: state.experienceInfo\n    });\n  }\n\n  handleEducationSubmit(info) {\n    const state = this.state;\n\n    this.setState({\n      generalInfo: state.generalInfo,\n      infoSubmitted: state.infoSubmitted,\n      educationInfo: state.educationInfo.concat({ info }),\n      experienceInfo: state.experienceInfo\n    });\n  }\n\n  handleExperienceSubmit(info) {\n    const state = this.state;\n\n    this.setState({\n      generalInfo: state.generalInfo,\n      infoSubmitted: state.infoSubmitted,\n      educationInfo: state.educationInfo,\n      experienceInfo: state.experienceInfo.concat({ info })\n    });\n  }\n\n  render() {\n    const { \n      generalInfo, \n      infoSubmitted,\n      educationInfo,\n      experienceInfo,\n    } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"containerHeader\">\n          <h1>CV Builder</h1>\n        </div>\n        <GeneralInfo \n          info={generalInfo} \n          onInfoSubmit={this.handleInfoSubmit}\n          infoSubmitted={infoSubmitted}\n        />\n        <h2>Education</h2>\n        {educationInfo.length > 0\n          ? educationInfo.map(education => (\n              <EducationDisplay\n                key={uniqid()}\n                educationInfo={education}\n                onEducationSubmit={this.handleEducationSubmit}\n              />\n          ))\n          : <p>Enter your education details below!</p>\n          }\n        <EducationForm onEducationSubmit={this.handleEducationSubmit} />\n        <h2>Practical Experience</h2>\n        {experienceInfo.length > 0\n          ? experienceInfo.map(experience => (\n              <PracticalExperienceDisplay\n                key={uniqid()}\n                experienceInfo={experience}\n                onExperienceSubmit={this.handleExperienceSubmit}\n              />\n          ))\n          : <p>Enter your practical experience below!</p>\n          }\n        <PracticalExperienceForm onExperienceSubmit={this.handleExperienceSubmit} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}