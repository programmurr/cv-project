{"version":3,"sources":["components/Buttons.js","utils/useFormInput.js","components/GeneralInfo.js","utils/dateValidator.js","components/EducationDisplay.js","components/EducationForm.js","components/PracticalExperienceDisplay.js","components/PracticalExperienceForm.js","App.js","index.js"],"names":["AddButton","className","type","EditButton","props","onClick","handleEditClick","ResubmitButton","DeleteButton","handleDeleteClick","useFormInput","initialValue","useState","value","setValue","onChange","e","target","clear","GeneralInfoForm","onSubmit","handleSubmit","htmlFor","name","required","handleNameChange","email","handleEmailChange","pattern","phone","handlePhoneChange","GeneralInfoDisplay","handleEdit","GeneralInfo","info","genInfo","setGenInfo","useEffect","infoSubmitted","onInfoSubmit","preventDefault","dateValidator","fromDate","toDate","EducationDisplay","maxDate","Date","toISOString","split","educationInfo","id","setId","schoolName","setSchoolName","courseTitle","setCourseTitle","studyFromDate","setStudyFromDate","studyToDate","setStudyToDate","editClicked","setEditClicked","onEducationEdit","alert","max","onEducationDelete","EducationForm","uniqid","educationObject","onEducationSubmit","PracticalExperienceDisplay","experienceInfo","companyName","setCompanyName","positionTitle","setPositionTitle","experienceFromDate","setExperienceFromDate","experienceToDate","setExperienceToDate","responsibilities","setResponsibilities","onExperienceEdit","onExperienceDelete","PracticalExperienceForm","experienceObject","onExperienceSubmit","App","generalInfo","setGeneralInfo","setInfoSubmitted","setEducationInfo","setExperienceInfo","handleEducationEdit","index","findIndex","edu","handleEducationDelete","newEducationInfo","filter","handleExperienceEdit","exp","handleExperienceDelete","newExperienceInfo","status","length","map","education","concat","experience","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f529122e.chunk.js","sourcesContent":["import React from 'react';\n\n\nfunction AddButton() {\n  return (\n    <div className=\"AddButton\">\n      <button type=\"submit\">Add</button>\n    </div>\n  );\n}\n\nfunction EditButton(props) {\n  return (\n    <button onClick={props.handleEditClick}>Edit</button>\n  );\n}\n\nfunction ResubmitButton() {\n  return (\n    <div className=\"ResubmitButton\">\n      <button type=\"submit\">Resubmit</button>\n    </div>\n  );\n}\n\nfunction DeleteButton(props) {\n  return (\n    <div className=\"DeleteButton\">\n      <button onClick={props.handleDeleteClick}>Delete</button>\n    </div>\n  );\n}\n\nexport { AddButton, EditButton, ResubmitButton, DeleteButton };","import { useState } from 'react';\n\nexport default function useFormInput(initialValue) {\n  const [ value, setValue ] = useState(initialValue)\n\n  function handleChange(e) {\n    setValue(e.target.value);\n  }\n\n  function handleClear() {\n    setValue(\"\");\n  }\n\n  return {\n    value,\n    setValue,\n    onChange: handleChange,\n    clear: handleClear\n  }\n}","import React, { useEffect, useState } from 'react';\nimport { AddButton, EditButton } from './Buttons';\nimport useFormInput from '../utils/useFormInput'\n\nfunction GeneralInfoForm(props) {\n  return (\n    <div className=\"generalInfoForm\">\n      <h2>General Info</h2>\n      <form onSubmit={props.handleSubmit}>\n        <div className=\"generalInfoName\">\n          <label htmlFor=\"nameInput\">Name: </label>\n          <input \n            type=\"text\" \n            name=\"name\" \n            required=\"required\"\n            value={props.name}\n            onChange={props.handleNameChange}\n          />\n        </div>\n        <div className=\"generalInfoEmail\">\n          <label htmlFor=\"emailInput\">Email: </label>\n          <input \n            type=\"email\" \n            name=\"email\"\n            required=\"required\" \n            value={props.email}\n            onChange={props.handleEmailChange}\n          />\n        </div>\n        <div className=\"generalInfoPhone\">\n          <label htmlFor=\"PhoneInput\">Phone: </label>\n          <input \n            type=\"text\" \n            name=\"phone\" \n            required=\"required\"\n            pattern=\"[0-9]{9,13}\"\n            value={props.phone}\n            onChange={props.handlePhoneChange}\n          />\n        </div>\n        <AddButton />\n      </form>\n    </div>\n  )\n}\n\nfunction GeneralInfoDisplay(props) {\n  return (\n    <div className=\"generalInfoDisplay\">\n      <h2>General Info</h2>\n      <ul>\n        <li>Name: {props.name}</li>\n        <li>Email: {props.email}</li>\n        <li>Phone: {props.phone}</li>\n      </ul>\n      <EditButton handleEditClick={props.handleEdit}/>\n    </div>\n  );\n}\n\nfunction GeneralInfo(props) {\n  const name = useFormInput(\"\");\n  const email = useFormInput(\"\");\n  const phone = useFormInput(\"\");\n\n  const [genInfo, setGenInfo] = useState(props.info);\n  useEffect(() => {\n    setGenInfo({\n      name: name.value,\n      email: email.value,\n      phone: phone.value\n    });\n  }, [props.info])\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onInfoSubmit(genInfo, true);\n  }\n\n  function handleEdit() {\n    props.onInfoSubmit(genInfo, false);\n  }\n\n  if (props.infoSubmitted) {\n    return (\n      <GeneralInfoDisplay \n      name={name.value}\n      email={email.value}\n      phone={phone.value}\n      handleEdit={handleEdit}\n      />\n    );\n  } else {\n    return (\n      <GeneralInfoForm \n      name={name.value} \n      email={email.value}\n      phone={phone.value}\n      handleNameChange={name.onChange}\n      handleEmailChange={email.onChange}\n      handlePhoneChange={phone.onChange}\n      handleSubmit={handleSubmit}\n      />\n    );\n  }\n}\n\nexport default GeneralInfo;","export default function dateValidator(fromDate, toDate) {\n  if (fromDate < toDate) {\n    return true\n  } else if (fromDate > toDate){\n    return false\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { EditButton, ResubmitButton, DeleteButton } from './Buttons';\nimport dateValidator from '../utils/dateValidator';\n\nfunction EducationDisplay(props) {\n\n  const maxDate = new Date().toISOString().split(\"T\")[0];\n\n  const [ id, setId ] = useState(props.educationInfo.id);\n  const [ schoolName, setSchoolName ] = useState(props.educationInfo.schoolName);\n  const [ courseTitle, setCourseTitle] = useState(props.educationInfo.courseTitle);\n  const [ studyFromDate, setStudyFromDate ] = useState(props.educationInfo.studyFromDate);\n  const [ studyToDate, setStudyToDate ] = useState(props.educationInfo.studyToDate);\n  const [ editClicked, setEditClicked ] = useState(props.educationInfo.editClicked);\n\n  \n  useEffect(() => {\n    setId(props.educationInfo.id);\n    setSchoolName(props.educationInfo.schoolName);\n    setCourseTitle(props.educationInfo.courseTitle);\n    setStudyFromDate(props.educationInfo.studyFromDate);\n    setStudyToDate(props.educationInfo.studyToDate);\n    setEditClicked(props.educationInfo.editClicked);\n  }, [\n    props.educationInfo.id,\n    props.educationInfo.schoolName,\n    props.educationInfo.courseTitle,\n    props.educationInfo.studyFromDate,\n    props.educationInfo.studyToDate,\n    props.educationInfo.editClicked\n  ])\n\n  function handleNameChange(e) {\n    setSchoolName(e.target.value);\n  }\n\n  function handleCourseChange(e) {\n    setCourseTitle(e.target.value);\n  }\n  \n  function handleFromChange(e) {\n    setStudyFromDate(e.target.value);\n  }\n\n  function handleToChange(e) {\n    setStudyToDate(e.target.value);\n  }\n\n  function handleDeleteClick() {\n    props.onEducationDelete({\n      id: id,\n      schoolName: schoolName,\n      courseTitle: courseTitle,\n      studyFromDate: studyFromDate,\n      studyToDate: studyToDate,\n      editClicked: editClicked\n    });\n  }\n\n  function handleResubmit(e) {\n    e.preventDefault();\n    const validated = dateValidator(studyFromDate, studyToDate);\n\n    if (validated) {\n      props.onEducationEdit({\n        id: id,\n        schoolName: schoolName,\n        courseTitle: courseTitle,\n        studyFromDate: studyFromDate,\n        studyToDate: studyToDate,\n        editClicked: false\n      });\n      setEditClicked(false);\n    } else {\n      alert(\"Please enter a valid date\");\n    }\n  }\n\n  function handleEditClick() {\n    setEditClicked(true);\n  }\n\n  if (editClicked) {\n    return (\n      <div className=\"educationEditForm\">\n        <form onSubmit={handleResubmit}>\n          <div className=\"schoolName\">\n            <label htmlFor=\"schoolNameInput\">School Name:</label>\n            <input \n              type=\"text\"\n              name=\"schoolName\"\n              required=\"required\"\n              value={schoolName}\n              onChange={handleNameChange}\n            />\n          </div>\n          <div className=\"courseTitle\">\n            <label htmlFor=\"courseTitleInput\">Course Title:</label>\n            <input \n              type=\"text\"\n              name=\"courseTitle\"\n              required=\"required\"\n              value={courseTitle}\n              onChange={handleCourseChange}\n            />\n          </div>\n          <div className=\"studyFromDate\">\n            <label htmlFor=\"studyFromInput\">From:</label>\n            <input \n              type=\"date\"\n              name=\"studyFromDate\"\n              required=\"required\"\n              max={maxDate}\n              value={studyFromDate}\n              onChange={handleFromChange}\n            />\n          </div>\n          <div className=\"studyToDate\">\n            <label htmlFor=\"studyToInput\">To:</label>\n            <input \n              type=\"date\"\n              name=\"studyToDate\"\n              required=\"required\"\n              max={maxDate}\n              value={studyToDate}\n              onChange={handleToChange}\n            />\n          </div>\n          <ResubmitButton />\n        </form>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"educationDisplay\">\n        <ul>\n          <li>School Name: {schoolName}</li>\n          <li>Course Title: {courseTitle}</li>\n          <li>From: {studyFromDate}</li>\n          <li>To: {studyToDate}</li>\n        </ul>\n        <div className=\"buttonsContainer\">\n          <EditButton handleEditClick={handleEditClick} />\n          <DeleteButton handleDeleteClick={handleDeleteClick} />\n        </div>\n      </div>\n    )\n  }\n}\nexport default EducationDisplay;","import React, { useState } from 'react';\nimport { AddButton }from './Buttons';\nimport uniqid from 'uniqid';\nimport dateValidator from '../utils/dateValidator';\nimport useFormInput from '../utils/useFormInput';\n\n\nfunction EducationForm(props) {\n  const maxDate = new Date().toISOString().split(\"T\")[0];\n  const [ id, setId ] = useState(uniqid());\n  const schoolName = useFormInput(\"\");\n  const courseTitle = useFormInput(\"\");\n  const studyFromDate = useFormInput(\"\");\n  const studyToDate = useFormInput(\"\");\n  const [ editClicked, setEditClicked ] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const educationObject = {\n      id: id,\n      schoolName: schoolName.value,\n      courseTitle: courseTitle.value,\n      studyFromDate: studyFromDate.value,\n      studyToDate: studyToDate.value,\n      editClicked: editClicked\n    }\n\n    const validated = dateValidator(studyFromDate.value, studyToDate.value);\n\n    if (validated) {\n      props.onEducationSubmit(educationObject);\n\n      setId(uniqid())\n      schoolName.setValue(\"\");\n      courseTitle.setValue(\"\");\n      studyFromDate.setValue(\"\");\n      studyToDate.setValue(\"\");\n      setEditClicked(false)\n    } else {\n      alert(\"Please enter a valid date\");\n    }\n  }\n\n  return (\n    <div className=\"educationForm\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"schoolName\">\n          <label htmlFor=\"schoolNameInput\">School Name:</label>\n          <input \n            type=\"text\"\n            name=\"schoolName\"\n            required=\"required\" \n            value={schoolName.value}\n            onChange={schoolName.onChange}\n          />\n        </div>\n        <div className=\"courseTitle\">\n          <label htmlFor=\"courseTitleInput\">Course Title:</label>\n          <input \n            type=\"text\"\n            name=\"courseTitle\"\n            required=\"required\" \n            value={courseTitle.value}\n            onChange={courseTitle.onChange}\n          />\n        </div>\n        <div className=\"studyFromDate\">\n          <label htmlFor=\"studyFromInput\">From:</label>\n          <input \n            type=\"date\"\n            name=\"studyFromDate\"\n            required=\"required\"\n            max={maxDate}\n            value={studyFromDate.value}\n            onChange={studyFromDate.onChange}\n          />\n        </div>\n        <div className=\"studyToDate\">\n          <label htmlFor=\"studyToInput\">To:</label>\n          <input \n            type=\"date\"\n            name=\"studyToDate\"\n            required=\"required\"\n            max={maxDate}\n            value={studyToDate.value}\n            onChange={studyToDate.onChange}\n          />\n        </div>\n        <AddButton />\n      </form>\n    </div>\n  )\n}\n\nexport default EducationForm;","import React, { useEffect, useState } from 'react';\nimport { EditButton, ResubmitButton, DeleteButton } from './Buttons';\nimport dateValidator from '../utils/dateValidator';\n\n\nfunction PracticalExperienceDisplay(props) {\n  const maxDate = new Date().toISOString().split(\"T\")[0];\n\n  const [ id, setId ] = useState(props.experienceInfo.id);\n  const [ companyName, setCompanyName ] = useState(props.experienceInfo.companyName);\n  const [ positionTitle, setPositionTitle ] = useState(props.experienceInfo.positionTitle);\n  const [ experienceFromDate, setExperienceFromDate ] = useState(props.experienceInfo.experienceFromDate);\n  const [ experienceToDate, setExperienceToDate ] = useState(props.experienceInfo.experienceToDate);\n  const [ responsibilities, setResponsibilities ] = useState(props.experienceInfo.responsibilities);\n  const [ editClicked, setEditClicked ] = useState(props.experienceInfo.editClicked);\n\n  useEffect(() => {\n    const { \n      id, \n      companyName, \n      positionTitle, \n      experienceFromDate, \n      experienceToDate, \n      responsibilities, \n      editClicked \n    } = props.experienceInfo;\n\n    setId(id);\n    setCompanyName(companyName);\n    setPositionTitle(positionTitle);\n    setExperienceFromDate(experienceFromDate);\n    setExperienceToDate(experienceToDate);\n    setResponsibilities(responsibilities);\n    setEditClicked(editClicked);\n  }, [\n    props.experienceInfo.id,\n    props.experienceInfo.companyName,\n    props.experienceInfo.positionTitle,\n    props.experienceInfo.experienceFromDate,\n    props.experienceInfo.experienceToDate,\n    props.experienceInfo.responsibilities,\n    props.experienceInfo.editClicked\n  ]);\n\n  function handleNameChange(e) {\n    setCompanyName(e.target.value);\n  }\n\n  function handlePositionChange(e) {\n    setPositionTitle(e.target.value);\n  }\n\n  function handleFromChange(e) {\n    setExperienceFromDate(e.target.value);\n  }\n\n  function handleToChange(e) {\n    setExperienceToDate(e.target.value);\n  }\n\n  function handleResponsibilitiesChange(e) {\n    setResponsibilities(e.target.value);\n  }\n\n  function handleDeleteClick() {\n    props.onExperienceDelete({\n      id: id,\n      companyName: companyName,\n      positionTitle: positionTitle,\n      experienceFromDate: experienceFromDate,\n      experienceToDate: experienceToDate,\n      responsibilities: responsibilities,\n      editClicked: editClicked\n    });\n  }\n\n  function handleResubmit(e) {\n    e.preventDefault();\n    const validated = dateValidator(experienceFromDate, experienceToDate);\n\n    if (validated) {\n      props.onExperienceEdit({\n        id: id,\n        companyName: companyName,\n        positionTitle: positionTitle,\n        experienceFromDate: experienceFromDate,\n        experienceToDate: experienceToDate,\n        responsibilities: responsibilities,\n        editClicked: false\n      });\n      setEditClicked(false);\n    } else {\n      alert(\"Please enter a valid date\");\n    }\n  }\n\n  function handleEditClick() {\n    setEditClicked(true);\n  }\n\n  if (editClicked) {\n    return (\n    <div className=\"experienceForm\">\n      <form onSubmit={handleResubmit}>\n        <div className=\"companyName\">\n          <label htmlFor=\"companyNameInput\">Company Name: </label>\n          <input \n            type=\"text\"\n            name=\"companyName\"\n            required=\"required\"\n            value={companyName}\n            onChange={handleNameChange}\n          />\n        </div>\n        <div className=\"positionTitle\">\n          <label htmlFor=\"positionTitleInput\">Position Title: </label>\n          <input \n            type=\"text\"\n            name=\"positionTitle\"\n            required=\"required\"\n            value={positionTitle}\n            onChange={handlePositionChange}\n          />\n        </div>\n        <div className=\"experienceFromDate\">\n          <label htmlFor=\"experienceFromInput\">From:</label>\n          <input \n            type=\"date\"\n            name=\"experienceFromDate\"\n            required=\"required\"\n            max={maxDate}\n            value={experienceFromDate}\n            onChange={handleFromChange}\n          />\n        </div>\n        <div className=\"experienceToDate\">\n          <label htmlFor=\"experienceToInput\">To:</label>\n          <input \n            type=\"date\"\n            name=\"experienceToDate\"\n            required=\"required\"\n            max={maxDate}\n            value={experienceToDate}\n            onChange={handleToChange}\n          />\n        </div>\n        <div className=\"responsibilities\">\n          <label htmlFor=\"responsibilitiesInput\">Responsibilities: </label>\n          <textarea\n            name=\"responsibilities\"\n            required=\"required\"\n            value={responsibilities}\n            onChange={handleResponsibilitiesChange} \n          />\n        </div>\n        <ResubmitButton />\n      </form>\n    </div>\n    )\n  } else {\n    return (\n      <div className=\"experienceDisplay\">\n        <ul>\n          <li>Organization Name: {companyName}</li>\n          <li>Position Title: {positionTitle}</li>\n          <li>From: {experienceFromDate}</li>\n          <li>To: {experienceToDate}</li>\n          <li>Responsibilities: {responsibilities}</li>\n        </ul>\n        <div className=\"buttonsContainer\">\n          <EditButton handleEditClick={handleEditClick} />\n          <DeleteButton handleDeleteClick={handleDeleteClick} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PracticalExperienceDisplay;","import React, { useState } from 'react';\nimport { AddButton }from './Buttons';\nimport uniqid from 'uniqid';\nimport dateValidator from '../utils/dateValidator';\nimport useFormInput from '../utils/useFormInput';\n\n\nfunction PracticalExperienceForm(props) {\n  const maxDate = new Date().toISOString().split(\"T\")[0];\n\n  const [ id, setId ] = useState(uniqid());\n  const companyName = useFormInput(\"\");\n  const positionTitle = useFormInput(\"\");\n  const experienceFromDate = useFormInput(\"\");\n  const experienceToDate = useFormInput(\"\");\n  const responsibilities = useFormInput(\"\");\n  const [ editClicked, setEditClicked ] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const experienceObject = {\n      id: id,\n      companyName: companyName.value,\n      positionTitle: positionTitle.value,\n      experienceFromDate: experienceFromDate.value,\n      experienceToDate: experienceToDate.value,\n      responsibilities: responsibilities.value,\n      editClicked: editClicked\n    }\n\n    const validated = dateValidator(experienceFromDate.value, experienceToDate.value);\n\n    if (validated) {\n      props.onExperienceSubmit(experienceObject);\n\n      setId(uniqid());\n      companyName.setValue(\"\");\n      positionTitle.setValue(\"\");\n      experienceFromDate.setValue(\"\");\n      experienceToDate.setValue(\"\");\n      responsibilities.setValue(\"\");\n      setEditClicked(false);\n    } else {\n      alert(\"Please enter a valid date\");\n    }\n  }\n\n  return (\n    <div className=\"experienceForm\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"companyName\">\n            <label htmlFor=\"companyNameInput\">Company Name: </label>\n            <input \n              type=\"text\"\n              name=\"companyName\"\n              required=\"required\"\n              value={companyName.value}\n              onChange={companyName.onChange}\n            />\n          </div>\n          <div className=\"positionTitle\">\n            <label htmlFor=\"positionTitleInput\">Position Title: </label>\n            <input \n              type=\"text\"\n              name=\"positionTitle\"\n              required=\"required\"\n              value={positionTitle.value}\n              onChange={positionTitle.onChange}\n            />\n          </div>\n          <div className=\"experienceFromDate\">\n            <label htmlFor=\"experienceFromInput\">From:</label>\n            <input \n              type=\"date\"\n              name=\"experienceFromDate\"\n              required=\"required\"\n              max={maxDate}\n              value={experienceFromDate.value}\n              onChange={experienceFromDate.onChange}\n            />\n          </div>\n          <div className=\"experienceToDate\">\n            <label htmlFor=\"experienceToInput\">To:</label>\n            <input \n              type=\"date\"\n              name=\"experienceToDate\"\n              required=\"required\"\n              max={maxDate}\n              value={experienceToDate.value}\n              onChange={experienceToDate.onChange}\n            />\n          </div>\n          <div className=\"responsibilities\">\n            <label htmlFor=\"responsibilitiesInput\">Responsibilities: </label>\n            <textarea\n              name=\"responsibilities\"\n              required=\"required\"\n              value={responsibilities.value}\n              onChange={responsibilities.onChange} \n            />\n          </div>\n          <AddButton />\n        </form>\n      </div>\n  )\n}\n\nexport default PracticalExperienceForm;","import React, { useState } from 'react';\nimport './styles/App.css';\nimport GeneralInfo from './components/GeneralInfo'\nimport EducationDisplay from './components/EducationDisplay'\nimport EducationForm from './components/EducationForm'\nimport PracticalExperienceDisplay from './components/PracticalExperienceDisplay'\nimport PracticalExperienceForm from './components/PracticalExperienceForm'\n\n\nfunction App() {\n  const [ generalInfo, setGeneralInfo ] = useState([]);\n  const [ infoSubmitted, setInfoSubmitted ] = useState(false);\n  const [ educationInfo, setEducationInfo ] = useState([]);\n  const [ experienceInfo, setExperienceInfo ] = useState([]);\n\n  function handleInfoSubmit(info, status) {\n    setGeneralInfo([info]);\n    setInfoSubmitted(status);\n  }\n\n  function handleEducationSubmit(info) {\n    const newEducationInfo = educationInfo.concat(info);\n    setEducationInfo(newEducationInfo);\n  }\n\n  // If below educationInfo schooName (for example) changes from \"My Uni\" to \"My Uni 2\" it renders\n  // But if user tries to resubmit without changing anything, render doesn't trigger\n  // Why isn't react detecting that a new object and then a new array is being made,\n  //  and thus triggering a re-render?\n  // Have tried various combos of new Array, Object.create, nothing triggers the render\n  function handleEducationEdit(info) {\n    const index = educationInfo.findIndex((edu => edu.id === info.id));\n    educationInfo[index] = info;\n    setEducationInfo([...educationInfo]);\n  }\n\n  function handleEducationDelete(info) {\n    const newEducationInfo = educationInfo.filter((edu => edu.id !== info.id))\n    setEducationInfo(newEducationInfo);\n  }\n\n  function handleExperienceSubmit(info) {\n    const newExperienceInfo = experienceInfo.concat(info);\n    setExperienceInfo(newExperienceInfo);\n  }\n\n  function handleExperienceEdit(info) {\n    const index = experienceInfo.findIndex((exp => exp.id === info.id));\n    experienceInfo[index] = info;\n    setExperienceInfo([...experienceInfo]);\n  }\n\n  function handleExperienceDelete(info) {\n    const newExperienceInfo = experienceInfo.filter((exp => exp.id !== info.id));\n    setExperienceInfo(newExperienceInfo);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"containerHeader\">\n        <h1>CV Builder</h1>\n      </div>\n      <GeneralInfo \n        info={generalInfo} \n        onInfoSubmit={handleInfoSubmit}\n        infoSubmitted={infoSubmitted}\n      />\n      <h2>Education</h2>\n      {educationInfo.length > 0 \n        ? educationInfo.map(education => (\n            <EducationDisplay\n              key={education.id}\n              educationInfo={education}\n              onEducationEdit={handleEducationEdit}\n              onEducationDelete={handleEducationDelete}\n            />\n        ))\n        : <p>Enter your education details below!</p>\n        }\n      <EducationForm \n        onEducationSubmit={handleEducationSubmit} \n      />\n      <h2>Practical Experience</h2>\n      {experienceInfo.length > 0\n        ? experienceInfo.map(experience => (\n            <PracticalExperienceDisplay\n              key={experience.id}\n              experienceInfo={experience}\n              onExperienceEdit={handleExperienceEdit}\n              onExperienceDelete={handleExperienceDelete}\n            />\n        ))\n        : <p>Enter your practical experience below!</p>\n        }\n      <PracticalExperienceForm \n        onExperienceSubmit={handleExperienceSubmit} \n      />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}