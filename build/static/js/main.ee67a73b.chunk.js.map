{"version":3,"sources":["components/AddButton.js","components/EditButton.js","components/GeneralInfo.js","components/ResubmitButton.js","components/EducationDisplay.js","components/EducationForm.js","components/PracticalExperienceDisplay.js","components/PracticalExperienceForm.js","App.js","index.js"],"names":["AddButton","className","type","React","Component","EditButton","props","onClick","this","handleEditClick","GeneralInfoForm","onSubmit","handleSubmit","htmlFor","name","value","onChange","handleChange","email","phone","GeneralInfoDisplay","handleEdit","GeneralInfo","state","bind","event","target","setState","preventDefault","onInfoSubmit","infoSubmitted","ResubmitButton","EditForm","educationInfo","schoolName","courseTitle","studyFromDate","studyToDate","handleEditSubmit","max","maxDate","EducationDisplay","id","editClicked","Object","assign","onEducationEdit","Date","toISOString","split","EducationForm","uniqid","onEducationSubmit","EditExperience","experienceInfo","companyName","positionTitle","experienceFromDate","experienceToDate","responsibilities","PracticalExperienceDisplay","onExperienceEdit","PracticalExperienceForm","onExperienceSubmit","App","generalInfo","handleInfoSubmit","handleEducationSubmit","handleEducationEdit","handleExperienceSubmit","handleExperienceEdit","info","status","concat","index","findIndex","edu","exp","length","map","education","experience","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee67a73b.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Buttons.css'\n\nclass AddButton extends React.Component {\n  render() {\n    return (\n      <div className=\"AddButton\">\n        <button type=\"submit\">Add</button>\n      </div>\n    );\n  }\n}\n\nexport default AddButton;","import React from 'react';\nimport '../styles/Buttons.css'\n\nclass EditButton extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <button onClick={this.props.handleEditClick}>Edit</button>\n    );\n  }\n}\n\nexport default EditButton;","import React from 'react';\nimport '../styles/GeneralInfo.css';\nimport AddButton from './AddButton';\nimport EditButton from './EditButton';\n\nfunction GeneralInfoForm(props) {\n  return (\n    <div className=\"generalInfoForm\">\n      <h2>General Info</h2>\n      <form onSubmit={props.handleSubmit}>\n        <div className=\"generalInfoName\">\n          <label htmlFor=\"nameInput\">Name: </label>\n          <input \n            type=\"text\" \n            name=\"name\" \n            value={props.name}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"generalInfoEmail\">\n          <label htmlFor=\"emailInput\">Email: </label>\n          <input \n            type=\"text\" \n            name=\"email\" \n            value={props.email}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"generalInfoPhone\">\n          <label htmlFor=\"PhoneInput\">Phone: </label>\n          <input \n            type=\"text\" \n            name=\"phone\" \n            value={props.phone}\n            onChange={props.handleChange}\n          />\n        </div>\n        <AddButton />\n      </form>\n    </div>\n  )\n}\n\nfunction GeneralInfoDisplay(props) {\n  return (\n    <div className=\"generalInfoDisplay\">\n      <h2>General Info</h2>\n      <ul>\n        <li>Name: {props.name}</li>\n        <li>Email: {props.email}</li>\n        <li>Phone: {props.phone}</li>\n      </ul>\n      <EditButton handleEditClick={props.handleEdit}/>\n    </div>\n  );\n}\n\nclass GeneralInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onInfoSubmit(this.state, true);\n  }\n\n  handleEdit() {\n    this.props.onInfoSubmit(this.state, false);\n  }\n\n  render() {\n    const { name, email, phone } = this.state;\n\n    if (this.props.infoSubmitted) {\n      return (\n        <GeneralInfoDisplay \n        name={name}\n        email={email}\n        phone={phone}\n        handleEdit={this.handleEdit}\n        />\n      );\n    } else {\n      return (\n        <GeneralInfoForm \n        name={name} \n        email={email}\n        phone={phone}\n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n        />\n      );\n    }\n  }\n}\n\nexport default GeneralInfo;","import React from 'react';\nimport '../styles/Buttons.css'\n\nclass ResubmitButton extends React.Component {\n  render() {\n    return (\n      <div className=\"ResubmitButton\">\n        <button type=\"submit\">Resubmit</button>\n      </div>\n    );\n  }\n}\n\nexport default ResubmitButton;","import React from 'react';\nimport '../styles/Education.css';\nimport EditButton from './EditButton';\nimport ResubmitButton from './ResubmitButton';\n\n\nfunction EditForm(props) {\n  const { schoolName, courseTitle, studyFromDate, studyToDate } = props.educationInfo;\n\n  return (\n    <div className=\"educationEditForm\">\n    <form onSubmit={props.handleEditSubmit}>\n      <div className=\"schoolName\">\n        <label htmlFor=\"schoolNameInput\">School Name:</label>\n        <input \n          type=\"text\"\n          name=\"schoolName\"\n          value={schoolName}\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"courseTitle\">\n        <label htmlFor=\"courseTitleInput\">Course Title:</label>\n        <input \n          type=\"text\"\n          name=\"courseTitle\"\n          value={courseTitle}\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"studyFromDate\">\n        <label htmlFor=\"studyFromInput\">From:</label>\n        <input \n          type=\"date\"\n          name=\"studyFromDate\"\n          max={props.maxDate}\n          value={studyFromDate}\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"studyToDate\">\n        <label htmlFor=\"studyToInput\">To:</label>\n        <input \n          type=\"date\"\n          name=\"studyToDate\"\n          max={props.maxDate}\n          value={studyToDate}\n          onChange={props.onChange}\n        />\n      </div>\n      <ResubmitButton />\n    </form>\n  </div>\n  )\n}\n\nclass EducationDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      schoolName: \"\",\n      courseTitle: \"\",\n      studyFromDate: \"\",\n      studyToDate: \"\",\n      editClicked: false\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEditClick = this.handleEditClick.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { \n      id, \n      schoolName, \n      courseTitle, \n      studyFromDate, \n      studyToDate,\n      editClicked\n    } = this.props.educationInfo\n\n    this.setState({\n      id: id,\n      schoolName: schoolName,\n      courseTitle: courseTitle,\n      studyFromDate: studyFromDate,\n      studyToDate: studyToDate,\n      editClicked: editClicked\n    })\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleEditClick() {\n    const state = Object.assign({}, this.state);\n    state.editClicked = true;\n\n    this.setState({\n      id: state.id,\n      schoolName: state.schoolName,\n      courseTitle: state.courseTitle,\n      studyFromDate: state.studyFromDate,\n      studyToDate: state.studyToDate,\n      editClicked: state.editClicked\n    });\n  }\n\n  handleEditSubmit(event) {\n    event.preventDefault();\n    this.props.onEducationEdit(this.state);\n  }\n\n  render() {\n    const maxDate = new Date().toISOString().split(\"T\")[0];\n\n    const { \n      schoolName, \n      courseTitle, \n      studyFromDate,\n      studyToDate,\n      editClicked \n    } = this.state;\n\n    if (editClicked) {\n      return (\n        <EditForm\n          maxDate={maxDate}\n          onChange={this.handleChange} \n          educationInfo={this.state}\n          handleEditSubmit={this.handleEditSubmit}\n        />\n      )\n    } else {\n      return (\n        <div className=\"educationDisplay\">\n          <ul>\n            <li>School Name: {schoolName}</li>\n            <li>Course Title: {courseTitle}</li>\n            <li>From: {studyFromDate}</li>\n            <li>To: {studyToDate}</li>\n          </ul>\n          <div className=\"buttonsContainer\">\n            <EditButton handleEditClick={this.handleEditClick} />\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default EducationDisplay;","import React from 'react';\nimport '../styles/Education.css';\nimport AddButton from './AddButton';\nimport uniqid from 'uniqid';\n\n\nclass EducationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: uniqid(),\n      schoolName: \"\",\n      courseTitle: \"\",\n      studyFromDate: \"\",\n      studyToDate: \"\",\n      editClicked: false\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onEducationSubmit(this.state);\n\n    this.setState({\n      id: uniqid(),\n      schoolName: \"\",\n      courseTitle: \"\",\n      studyFromDate: \"\",\n      studyToDate: \"\",\n      editClicked: false\n    })\n  }\n\n  render() {\n    const maxDate = new Date().toISOString().split(\"T\")[0];\n\n    const { \n      schoolName, \n      courseTitle, \n      studyFromDate,\n      studyToDate,\n    } = this.state;\n\n    return (\n      <div className=\"educationForm\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"schoolName\">\n            <label htmlFor=\"schoolNameInput\">School Name:</label>\n            <input \n              type=\"text\"\n              name=\"schoolName\"\n              value={schoolName}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"courseTitle\">\n            <label htmlFor=\"courseTitleInput\">Course Title:</label>\n            <input \n              type=\"text\"\n              name=\"courseTitle\"\n              value={courseTitle}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"studyFromDate\">\n            <label htmlFor=\"studyFromInput\">From:</label>\n            <input \n              type=\"date\"\n              name=\"studyFromDate\"\n              max={maxDate}\n              value={studyFromDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"studyToDate\">\n            <label htmlFor=\"studyToInput\">To:</label>\n            <input \n              type=\"date\"\n              name=\"studyToDate\"\n              max={maxDate}\n              value={studyToDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <AddButton />\n        </form>\n      </div>\n    )\n\n  }\n}\n\nexport default EducationForm;","import React from 'react';\nimport '../styles/PracticalExperience.css'\nimport EditButton from './EditButton';\nimport ResubmitButton from './ResubmitButton';\n\n\nfunction EditExperience(props) {\n  const {\n    companyName,\n    positionTitle,\n    experienceFromDate,\n    experienceToDate,\n    responsibilities\n  } = props.experienceInfo;\n\n  return (\n    <div className=\"experienceForm\">\n      <h2>Practical Experience</h2>\n      <form onSubmit={props.handleEditSubmit}>\n        <div className=\"companyName\">\n          <label htmlFor=\"companyNameInput\">Company Name: </label>\n          <input \n            type=\"text\"\n            name=\"companyName\"\n            value={companyName}\n            onChange={props.onChange}\n          />\n        </div>\n        <div className=\"positionTitle\">\n          <label htmlFor=\"positionTitleInput\">Position Title: </label>\n          <input \n            type=\"text\"\n            name=\"positionTitle\"\n            value={positionTitle}\n            onChange={props.onChange}\n          />\n        </div>\n        <div className=\"experienceFromDate\">\n          <label htmlFor=\"experienceFromInput\">From:</label>\n          <input \n            type=\"date\"\n            name=\"experienceFromDate\"\n            max={props.maxDate}\n            value={experienceFromDate}\n            onChange={props.onChange}\n          />\n        </div>\n        <div className=\"experienceToDate\">\n          <label htmlFor=\"experienceToInput\">To:</label>\n          <input \n            type=\"date\"\n            name=\"experienceToDate\"\n            max={props.maxDate}\n            value={experienceToDate}\n            onChange={props.onChange}\n          />\n        </div>\n        <div className=\"responsibilities\">\n          <label htmlFor=\"responsibilitiesInput\">Responsibilities: </label>\n          <textarea\n            name=\"responsibilities\"\n            value={responsibilities}\n            onChange={props.onChange} \n          />\n        </div>\n        <ResubmitButton />\n      </form>\n    </div>\n  );\n}\n\nclass PracticalExperienceDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      companyName: \"\",\n      positionTitle: \"\",\n      experienceFromDate: \"\",\n      experienceToDate: \"\",\n      responsibilities: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEditClick = this.handleEditClick.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      id,\n      companyName,\n      positionTitle,\n      experienceFromDate,\n      experienceToDate,\n      responsibilities,\n      editClicked\n    } = this.props.experienceInfo;\n\n    this.setState({\n      id: id,\n      companyName: companyName,\n      positionTitle: positionTitle,\n      experienceFromDate: experienceFromDate,\n      experienceToDate: experienceToDate,\n      responsibilities: responsibilities,\n      editClicked: editClicked\n    });\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleEditClick() {\n    const state = Object.assign({}, this.state);\n    state.editClicked = true;\n\n    this.setState({\n      id: state.id,\n      companyName: state.companyName,\n      positionTitle: state.positionTitle,\n      experienceFromDate: state.experienceFromDate,\n      experienceToDate: state.experienceToDate,\n      responsibilities: state.responsibilities,\n      editClicked: state.editClicked\n    });\n  }\n\n  handleEditSubmit(event) {\n    event.preventDefault();\n    this.props.onExperienceEdit(this.state);\n  }\n\n  render() {\n    const maxDate = new Date().toISOString().split(\"T\")[0];\n\n    const {\n      companyName,\n      positionTitle,\n      experienceFromDate,\n      experienceToDate,\n      responsibilities,\n      editClicked\n    } = this.state;\n\n    if (editClicked) {\n      return (\n        <EditExperience \n          maxDate={maxDate}\n          onChange={this.handleChange}\n          experienceInfo={this.state}\n          handleEditSubmit={this.handleEditSubmit}\n        />\n      )\n    } else {\n      return (\n        <div className=\"experienceDisplay\">\n          <h2>Experience</h2>\n          <ul>\n            <li>Organization Name: {companyName}</li>\n            <li>Position Title: {positionTitle}</li>\n            <li>From: {experienceFromDate}</li>\n            <li>To: {experienceToDate}</li>\n            <li>Responsibilities: {responsibilities}</li>\n          </ul>\n          <div className=\"buttonsContainer\">\n            <EditButton handleEditClick={this.handleEditClick} />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default PracticalExperienceDisplay;","import React from 'react';\nimport '../styles/PracticalExperience.css'\nimport AddButton from './AddButton';\nimport uniqid from 'uniqid';\n\nclass PracticalExperienceForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: uniqid(),\n      companyName: \"\",\n      positionTitle: \"\",\n      experienceFromDate: \"\",\n      experienceToDate: \"\",\n      responsibilities: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onExperienceSubmit(this.state);\n\n    this.setState({\n      id: uniqid(),\n      companyName: \"\",\n      positionTitle: \"\",\n      experienceFromDate: \"\",\n      experienceToDate: \"\",\n      responsibilities: \"\"\n    })\n  }\n\n  render() {\n    const maxDate = new Date().toISOString().split(\"T\")[0];\n\n    const {\n      companyName,\n      positionTitle,\n      experienceFromDate,\n      experienceToDate,\n      responsibilities\n    } = this.state;\n\n\n    return (\n      <div className=\"experienceForm\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"companyName\">\n            <label htmlFor=\"companyNameInput\">Company Name: </label>\n            <input \n              type=\"text\"\n              name=\"companyName\"\n              value={companyName}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"positionTitle\">\n            <label htmlFor=\"positionTitleInput\">Position Title: </label>\n            <input \n              type=\"text\"\n              name=\"positionTitle\"\n              value={positionTitle}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"experienceFromDate\">\n            <label htmlFor=\"experienceFromInput\">From:</label>\n            <input \n              type=\"date\"\n              name=\"experienceFromDate\"\n              max={maxDate}\n              value={experienceFromDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"experienceToDate\">\n            <label htmlFor=\"experienceToInput\">To:</label>\n            <input \n              type=\"date\"\n              name=\"experienceToDate\"\n              max={maxDate}\n              value={experienceToDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"responsibilities\">\n            <label htmlFor=\"responsibilitiesInput\">Responsibilities: </label>\n            <textarea\n              name=\"responsibilities\"\n              value={responsibilities}\n              onChange={this.handleChange} \n            />\n          </div>\n          <AddButton />\n        </form>\n      </div>\n    );\n\n  }\n}\n\nexport default PracticalExperienceForm;","import React from 'react';\nimport './styles/App.css';\nimport GeneralInfo from './components/GeneralInfo'\nimport EducationDisplay from './components/EducationDisplay'\nimport EducationForm from './components/EducationForm'\nimport PracticalExperienceDisplay from './components/PracticalExperienceDisplay'\nimport PracticalExperienceForm from './components/PracticalExperienceForm'\n\n// Make delete functionality\n// Add validation for dates e.g. 'to' cannot be less than 'from'\n// No blank fields when submitting\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      generalInfo: [],\n      infoSubmitted: false, \n      educationInfo: [],\n      experienceInfo: []\n    }\n\n    this.handleInfoSubmit = this.handleInfoSubmit.bind(this);\n\n    this.handleEducationSubmit = this.handleEducationSubmit.bind(this);\n    this.handleEducationEdit = this.handleEducationEdit.bind(this);\n\n    this.handleExperienceSubmit = this.handleExperienceSubmit.bind(this);\n    this.handleExperienceEdit = this.handleExperienceEdit.bind(this);\n  }\n\n  handleInfoSubmit(info, status) {\n    const state = this.state;\n\n    this.setState({\n      generalInfo: [info],\n      infoSubmitted: status,\n      educationInfo: state.educationInfo,\n      experienceInfo: state.experienceInfo\n    });\n  }\n\n  handleEducationSubmit(info) {\n    const state = this.state;\n\n    this.setState({\n      generalInfo: state.generalInfo,\n      infoSubmitted: state.infoSubmitted,\n      educationInfo: state.educationInfo.concat(info),\n      experienceInfo: state.experienceInfo\n    });\n  }\n\n  handleEducationEdit(info) {\n    const state = Object.assign({}, this.state);\n    const index = state.educationInfo.findIndex((edu => edu.id === info.id));\n    state.educationInfo[index] = info;\n    state.educationInfo[index].editClicked = false;\n\n    this.setState({\n      generalInfo: state.generalInfo,\n      infoSubmitted: state.infoSubmitted,\n      educationInfo: state.educationInfo,\n      experienceInfo: state.experienceInfo\n    })\n  }\n\n  handleExperienceEdit(info) {\n    const state = Object.assign({}, this.state);\n    const index = state.experienceInfo.findIndex((exp => exp.id === info.id));\n    state.experienceInfo[index] = info;\n    state.experienceInfo[index].editClicked = false;\n\n    this.setState({\n      generalInfo: state.generalInfo,\n      infoSubmitted: state.infoSubmitted,\n      educationInfo: state.educationInfo,\n      experienceInfo: state.experienceInfo\n    })\n  }\n\n  handleExperienceSubmit(info) {\n    const state = this.state;\n\n    this.setState({\n      generalInfo: state.generalInfo,\n      infoSubmitted: state.infoSubmitted,\n      educationInfo: state.educationInfo,\n      experienceInfo: state.experienceInfo.concat(info)\n    });\n  }\n\n  render() {\n    const { \n      generalInfo, \n      infoSubmitted,\n      educationInfo,\n      experienceInfo,\n    } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"containerHeader\">\n          <h1>CV Builder</h1>\n        </div>\n        <GeneralInfo \n          info={generalInfo} \n          onInfoSubmit={this.handleInfoSubmit}\n          infoSubmitted={infoSubmitted}\n        />\n        <h2>Education</h2>\n        {educationInfo.length > 0 \n          ? educationInfo.map(education => (\n              <EducationDisplay\n                key={education.id}\n                educationInfo={education}\n                onEducationEdit={this.handleEducationEdit}\n              />\n          ))\n          : <p>Enter your education details below!</p>\n          }\n        <EducationForm \n          onEducationSubmit={this.handleEducationSubmit} \n        />\n        <h2>Practical Experience</h2>\n        {experienceInfo.length > 0\n          ? experienceInfo.map(experience => (\n              <PracticalExperienceDisplay\n                key={experience.id}\n                experienceInfo={experience}\n                onExperienceEdit={this.handleExperienceEdit}\n              />\n          ))\n          : <p>Enter your practical experience below!</p>\n          }\n        <PracticalExperienceForm \n          onExperienceSubmit={this.handleExperienceSubmit} \n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}