{"version":3,"sources":["components/Buttons.js","components/GeneralInfo.js","components/dateValidator.js","components/EducationDisplay.js","components/EducationForm.js","components/PracticalExperienceDisplay.js","components/PracticalExperienceForm.js","App.js","index.js"],"names":["AddButton","className","type","React","Component","EditButton","props","onClick","this","handleEditClick","ResubmitButton","DeleteButton","handleDeleteClick","GeneralInfoForm","onSubmit","handleSubmit","htmlFor","name","required","value","onChange","handleChange","email","pattern","phone","GeneralInfoDisplay","handleEdit","GeneralInfo","state","bind","event","target","setState","preventDefault","onInfoSubmit","infoSubmitted","dateValidator","fromDate","toDate","EditForm","educationInfo","schoolName","courseTitle","studyFromDate","studyToDate","handleEditSubmit","max","maxDate","EducationDisplay","id","editClicked","Object","assign","onEducationEdit","alert","onEducationDelete","Date","toISOString","split","EducationForm","uniqid","onEducationSubmit","EditExperience","experienceInfo","companyName","positionTitle","experienceFromDate","experienceToDate","responsibilities","PracticalExperienceDisplay","onExperienceEdit","onExperienceDelete","PracticalExperienceForm","onExperienceSubmit","App","generalInfo","handleInfoSubmit","handleEducationSubmit","handleEducationEdit","handleEducationDelete","handleExperienceSubmit","handleExperienceEdit","handleExperienceDelete","info","status","concat","index","findIndex","edu","newEducationInfo","filter","exp","newExperienceInfo","length","map","education","experience","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f9f4180.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Buttons.css'\n\n\nclass AddButton extends React.Component {\n  render() {\n    return (\n      <div className=\"AddButton\">\n        <button type=\"submit\">Add</button>\n      </div>\n    );\n  }\n}\n\nclass EditButton extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <button onClick={this.props.handleEditClick}>Edit</button>\n    );\n  }\n}\n\nclass ResubmitButton extends React.Component {\n  render() {\n    return (\n      <div className=\"ResubmitButton\">\n        <button type=\"submit\">Resubmit</button>\n      </div>\n    );\n  }\n}\n\nclass DeleteButton extends React.Component {\n  render() {\n    return (\n      <div className=\"DeleteButton\">\n        <button onClick={this.props.handleDeleteClick}>Delete</button>\n      </div>\n    );\n  }\n}\n\nexport { AddButton, EditButton, ResubmitButton, DeleteButton };","import React from 'react';\nimport '../styles/GeneralInfo.css';\nimport { AddButton, EditButton } from './Buttons';\n\nfunction GeneralInfoForm(props) {\n  return (\n    <div className=\"generalInfoForm\">\n      <h2>General Info</h2>\n      <form onSubmit={props.handleSubmit}>\n        <div className=\"generalInfoName\">\n          <label htmlFor=\"nameInput\">Name: </label>\n          <input \n            type=\"text\" \n            name=\"name\" \n            required=\"required\"\n            value={props.name}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"generalInfoEmail\">\n          <label htmlFor=\"emailInput\">Email: </label>\n          <input \n            type=\"text\" \n            name=\"email\"\n            required=\"required\" \n            value={props.email}\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className=\"generalInfoPhone\">\n          <label htmlFor=\"PhoneInput\">Phone: </label>\n          <input \n            type=\"text\" \n            name=\"phone\" \n            required=\"required\"\n            pattern=\"[0-9]{9,13}\"\n            value={props.phone}\n            onChange={props.handleChange}\n          />\n        </div>\n        <AddButton />\n      </form>\n    </div>\n  )\n}\n\nfunction GeneralInfoDisplay(props) {\n  return (\n    <div className=\"generalInfoDisplay\">\n      <h2>General Info</h2>\n      <ul>\n        <li>Name: {props.name}</li>\n        <li>Email: {props.email}</li>\n        <li>Phone: {props.phone}</li>\n      </ul>\n      <EditButton handleEditClick={props.handleEdit}/>\n    </div>\n  );\n}\n\nclass GeneralInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onInfoSubmit(this.state, true);\n  }\n\n  handleEdit() {\n    this.props.onInfoSubmit(this.state, false);\n  }\n\n  render() {\n    const { name, email, phone } = this.state;\n\n    if (this.props.infoSubmitted) {\n      return (\n        <GeneralInfoDisplay \n        name={name}\n        email={email}\n        phone={phone}\n        handleEdit={this.handleEdit}\n        />\n      );\n    } else {\n      return (\n        <GeneralInfoForm \n        name={name} \n        email={email}\n        phone={phone}\n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n        />\n      );\n    }\n  }\n}\n\nexport default GeneralInfo;","export default function dateValidator(fromDate, toDate) {\n  if (fromDate < toDate) {\n    return true\n  } else if (fromDate > toDate){\n    return false\n  }\n}","import React from 'react';\nimport '../styles/Education.css';\nimport { EditButton, ResubmitButton, DeleteButton } from './Buttons';\nimport dateValidator from './dateValidator';\n\n\nfunction EditForm(props) {\n  const { schoolName, courseTitle, studyFromDate, studyToDate } = props.educationInfo;\n\n  return (\n    <div className=\"educationEditForm\">\n    <form onSubmit={props.handleEditSubmit}>\n      <div className=\"schoolName\">\n        <label htmlFor=\"schoolNameInput\">School Name:</label>\n        <input \n          type=\"text\"\n          name=\"schoolName\"\n          required=\"required\"\n          value={schoolName}\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"courseTitle\">\n        <label htmlFor=\"courseTitleInput\">Course Title:</label>\n        <input \n          type=\"text\"\n          name=\"courseTitle\"\n          required=\"required\"\n          value={courseTitle}\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"studyFromDate\">\n        <label htmlFor=\"studyFromInput\">From:</label>\n        <input \n          type=\"date\"\n          name=\"studyFromDate\"\n          required=\"required\"\n          max={props.maxDate}\n          value={studyFromDate}\n          onChange={props.onChange}\n        />\n      </div>\n      <div className=\"studyToDate\">\n        <label htmlFor=\"studyToInput\">To:</label>\n        <input \n          type=\"date\"\n          name=\"studyToDate\"\n          required=\"required\"\n          max={props.maxDate}\n          value={studyToDate}\n          onChange={props.onChange}\n        />\n      </div>\n      <ResubmitButton />\n    </form>\n  </div>\n  )\n}\n\nclass EducationDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      schoolName: \"\",\n      courseTitle: \"\",\n      studyFromDate: \"\",\n      studyToDate: \"\",\n      editClicked: false\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEditClick = this.handleEditClick.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(this.props.educationInfo)\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleEditClick() {\n    const state = Object.assign({}, this.state);\n    state.editClicked = true;\n\n    this.setState(state);\n  }\n\n  handleEditSubmit(event) {\n    event.preventDefault();\n    const validated = dateValidator(this.state.studyFromDate, this.state.studyToDate);\n\n    if (validated) {\n      this.props.onEducationEdit(this.state);\n    } else {\n      alert(\"Please enter a valid date\");\n    }\n  }\n\n  handleDeleteClick() {\n    this.props.onEducationDelete(this.state);\n  }\n\n  render() {\n    const maxDate = new Date().toISOString().split(\"T\")[0];\n\n    const { \n      schoolName, \n      courseTitle, \n      studyFromDate,\n      studyToDate,\n      editClicked \n    } = this.state;\n\n    if (editClicked) {\n      return (\n        <EditForm\n          maxDate={maxDate}\n          onChange={this.handleChange} \n          educationInfo={this.state}\n          handleEditSubmit={this.handleEditSubmit}\n        />\n      )\n    } else {\n      return (\n        <div className=\"educationDisplay\">\n          <ul>\n            <li>School Name: {schoolName}</li>\n            <li>Course Title: {courseTitle}</li>\n            <li>From: {studyFromDate}</li>\n            <li>To: {studyToDate}</li>\n          </ul>\n          <div className=\"buttonsContainer\">\n            <EditButton handleEditClick={this.handleEditClick} />\n            <DeleteButton handleDeleteClick={this.handleDeleteClick} />\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default EducationDisplay;","import React from 'react';\nimport '../styles/Education.css';\nimport { AddButton }from './Buttons';\nimport uniqid from 'uniqid';\nimport dateValidator from './dateValidator';\n\n\nclass EducationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: uniqid(),\n      schoolName: \"\",\n      courseTitle: \"\",\n      studyFromDate: \"\",\n      studyToDate: \"\",\n      editClicked: false\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const validated = dateValidator(this.state.studyFromDate, this.state.studyToDate);\n    \n    if (validated) {\n      this.props.onEducationSubmit(this.state);\n\n      this.setState({\n        id: uniqid(),\n        schoolName: \"\",\n        courseTitle: \"\",\n        studyFromDate: \"\",\n        studyToDate: \"\",\n        editClicked: false\n      })\n    } else {\n      alert(\"Please enter a valid date\");\n    }\n  }\n\n  render() {\n    const maxDate = new Date().toISOString().split(\"T\")[0];\n\n    const { \n      schoolName, \n      courseTitle, \n      studyFromDate,\n      studyToDate,\n    } = this.state;\n\n    return (\n      <div className=\"educationForm\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"schoolName\">\n            <label htmlFor=\"schoolNameInput\">School Name:</label>\n            <input \n              type=\"text\"\n              name=\"schoolName\"\n              required=\"required\" \n              value={schoolName}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"courseTitle\">\n            <label htmlFor=\"courseTitleInput\">Course Title:</label>\n            <input \n              type=\"text\"\n              name=\"courseTitle\"\n              required=\"required\" \n              value={courseTitle}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"studyFromDate\">\n            <label htmlFor=\"studyFromInput\">From:</label>\n            <input \n              type=\"date\"\n              name=\"studyFromDate\"\n              required=\"required\"\n              max={maxDate}\n              value={studyFromDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"studyToDate\">\n            <label htmlFor=\"studyToInput\">To:</label>\n            <input \n              type=\"date\"\n              name=\"studyToDate\"\n              required=\"required\"\n              max={maxDate}\n              value={studyToDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <AddButton />\n        </form>\n      </div>\n    )\n\n  }\n}\n\nexport default EducationForm;","import React from 'react';\nimport '../styles/PracticalExperience.css'\nimport { EditButton, ResubmitButton, DeleteButton } from './Buttons';\nimport dateValidator from './dateValidator';\n\n\nfunction EditExperience(props) {\n  const {\n    companyName,\n    positionTitle,\n    experienceFromDate,\n    experienceToDate,\n    responsibilities\n  } = props.experienceInfo;\n\n  return (\n    <div className=\"experienceForm\">\n      <form onSubmit={props.handleEditSubmit}>\n        <div className=\"companyName\">\n          <label htmlFor=\"companyNameInput\">Company Name: </label>\n          <input \n            type=\"text\"\n            name=\"companyName\"\n            required=\"required\"\n            value={companyName}\n            onChange={props.onChange}\n          />\n        </div>\n        <div className=\"positionTitle\">\n          <label htmlFor=\"positionTitleInput\">Position Title: </label>\n          <input \n            type=\"text\"\n            name=\"positionTitle\"\n            required=\"required\"\n            value={positionTitle}\n            onChange={props.onChange}\n          />\n        </div>\n        <div className=\"experienceFromDate\">\n          <label htmlFor=\"experienceFromInput\">From:</label>\n          <input \n            type=\"date\"\n            name=\"experienceFromDate\"\n            required=\"required\"\n            max={props.maxDate}\n            value={experienceFromDate}\n            onChange={props.onChange}\n          />\n        </div>\n        <div className=\"experienceToDate\">\n          <label htmlFor=\"experienceToInput\">To:</label>\n          <input \n            type=\"date\"\n            name=\"experienceToDate\"\n            required=\"required\"\n            max={props.maxDate}\n            value={experienceToDate}\n            onChange={props.onChange}\n          />\n        </div>\n        <div className=\"responsibilities\">\n          <label htmlFor=\"responsibilitiesInput\">Responsibilities: </label>\n          <textarea\n            name=\"responsibilities\"\n            required=\"required\"\n            value={responsibilities}\n            onChange={props.onChange} \n          />\n        </div>\n        <ResubmitButton />\n      </form>\n    </div>\n  );\n}\n\nclass PracticalExperienceDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      companyName: \"\",\n      positionTitle: \"\",\n      experienceFromDate: \"\",\n      experienceToDate: \"\",\n      responsibilities: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEditClick = this.handleEditClick.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(this.props.experienceInfo);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleEditClick() {\n    const state = Object.assign({}, this.state);\n    state.editClicked = true;\n\n    this.setState(state);\n  }\n\n  handleEditSubmit(event) {\n    event.preventDefault();\n    const validated = dateValidator(this.state.experienceFromDate, this.state.experienceToDate);\n\n    if (validated) {\n      this.props.onExperienceEdit(this.state);\n    } else {\n      alert(\"Please enter a valid date\");\n    }\n  }\n\n  handleDeleteClick() {\n    this.props.onExperienceDelete(this.state);\n  }\n\n  render() {\n    const maxDate = new Date().toISOString().split(\"T\")[0];\n\n    const {\n      companyName,\n      positionTitle,\n      experienceFromDate,\n      experienceToDate,\n      responsibilities,\n      editClicked\n    } = this.state;\n\n    if (editClicked) {\n      return (\n        <EditExperience \n          maxDate={maxDate}\n          onChange={this.handleChange}\n          experienceInfo={this.state}\n          handleEditSubmit={this.handleEditSubmit}\n        />\n      )\n    } else {\n      return (\n        <div className=\"experienceDisplay\">\n          <ul>\n            <li>Organization Name: {companyName}</li>\n            <li>Position Title: {positionTitle}</li>\n            <li>From: {experienceFromDate}</li>\n            <li>To: {experienceToDate}</li>\n            <li>Responsibilities: {responsibilities}</li>\n          </ul>\n          <div className=\"buttonsContainer\">\n            <EditButton handleEditClick={this.handleEditClick} />\n            <DeleteButton handleDeleteClick={this.handleDeleteClick} />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default PracticalExperienceDisplay;","import React from 'react';\nimport '../styles/PracticalExperience.css'\nimport { AddButton }from './Buttons';\nimport uniqid from 'uniqid';\nimport dateValidator from './dateValidator';\n\n\nclass PracticalExperienceForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: uniqid(),\n      companyName: \"\",\n      positionTitle: \"\",\n      experienceFromDate: \"\",\n      experienceToDate: \"\",\n      responsibilities: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const validated = dateValidator(this.state.experienceFromDate, this.state.experienceToDate);\n\n    if (validated) {\n      this.props.onExperienceSubmit(this.state);\n\n      this.setState({\n        id: uniqid(),\n        companyName: \"\",\n        positionTitle: \"\",\n        experienceFromDate: \"\",\n        experienceToDate: \"\",\n        responsibilities: \"\"\n      })\n    } else {\n      alert(\"Please enter a valid date\");\n    }\n    \n  }\n\n  render() {\n    const maxDate = new Date().toISOString().split(\"T\")[0];\n\n    const {\n      companyName,\n      positionTitle,\n      experienceFromDate,\n      experienceToDate,\n      responsibilities\n    } = this.state;\n\n\n    return (\n      <div className=\"experienceForm\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"companyName\">\n            <label htmlFor=\"companyNameInput\">Company Name: </label>\n            <input \n              type=\"text\"\n              name=\"companyName\"\n              required=\"required\"\n              value={companyName}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"positionTitle\">\n            <label htmlFor=\"positionTitleInput\">Position Title: </label>\n            <input \n              type=\"text\"\n              name=\"positionTitle\"\n              required=\"required\"\n              value={positionTitle}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"experienceFromDate\">\n            <label htmlFor=\"experienceFromInput\">From:</label>\n            <input \n              type=\"date\"\n              name=\"experienceFromDate\"\n              required=\"required\"\n              max={maxDate}\n              value={experienceFromDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"experienceToDate\">\n            <label htmlFor=\"experienceToInput\">To:</label>\n            <input \n              type=\"date\"\n              name=\"experienceToDate\"\n              required=\"required\"\n              max={maxDate}\n              value={experienceToDate}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"responsibilities\">\n            <label htmlFor=\"responsibilitiesInput\">Responsibilities: </label>\n            <textarea\n              name=\"responsibilities\"\n              required=\"required\"\n              value={responsibilities}\n              onChange={this.handleChange} \n            />\n          </div>\n          <AddButton />\n        </form>\n      </div>\n    );\n\n  }\n}\n\nexport default PracticalExperienceForm;","import React from 'react';\nimport './styles/App.css';\nimport GeneralInfo from './components/GeneralInfo'\nimport EducationDisplay from './components/EducationDisplay'\nimport EducationForm from './components/EducationForm'\nimport PracticalExperienceDisplay from './components/PracticalExperienceDisplay'\nimport PracticalExperienceForm from './components/PracticalExperienceForm'\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      generalInfo: [],\n      infoSubmitted: false, \n      educationInfo: [],\n      experienceInfo: []\n    }\n\n    this.handleInfoSubmit = this.handleInfoSubmit.bind(this);\n\n    this.handleEducationSubmit = this.handleEducationSubmit.bind(this);\n    this.handleEducationEdit = this.handleEducationEdit.bind(this);\n    this.handleEducationDelete = this.handleEducationDelete.bind(this);\n\n    this.handleExperienceSubmit = this.handleExperienceSubmit.bind(this);\n    this.handleExperienceEdit = this.handleExperienceEdit.bind(this);\n    this.handleExperienceDelete = this.handleExperienceDelete.bind(this);\n  }\n\n  handleInfoSubmit(info, status) {\n    const state = this.state;\n\n    this.setState({\n      generalInfo: [info],\n      infoSubmitted: status,\n      educationInfo: state.educationInfo,\n      experienceInfo: state.experienceInfo\n    });\n  }\n\n  handleEducationSubmit(info) {\n    const state = this.state;\n\n    this.setState({\n      generalInfo: state.generalInfo,\n      infoSubmitted: state.infoSubmitted,\n      educationInfo: state.educationInfo.concat(info),\n      experienceInfo: state.experienceInfo\n    });\n  }\n\n  handleEducationEdit(info) {\n    const state = Object.assign({}, this.state);\n    const index = state.educationInfo.findIndex((edu => edu.id === info.id));\n    state.educationInfo[index] = info;\n    state.educationInfo[index].editClicked = false;\n\n    this.setState({ state })\n  }\n\n  handleEducationDelete(info) {\n    const state = Object.assign({}, this.state);\n    const newEducationInfo = state.educationInfo.filter((edu => edu.id !== info.id));\n    \n    this.setState({\n      generalInfo: state.generalInfo,\n      infoSubmitted: state.infoSubmitted,\n      educationInfo: newEducationInfo,\n      experienceInfo: state.experienceInfo\n    })\n  }\n\n  handleExperienceSubmit(info) {\n    const state = this.state;\n\n    this.setState({\n      generalInfo: state.generalInfo,\n      infoSubmitted: state.infoSubmitted,\n      educationInfo: state.educationInfo,\n      experienceInfo: state.experienceInfo.concat(info)\n    });\n  }\n\n  handleExperienceEdit(info) {\n    const state = Object.assign({}, this.state);\n    const index = state.experienceInfo.findIndex((exp => exp.id === info.id));\n    state.experienceInfo[index] = info;\n    state.experienceInfo[index].editClicked = false;\n\n    this.setState({ state })\n  }\n\n  handleExperienceDelete(info) {\n    const state = Object.assign({}, this.state);\n    const newExperienceInfo = state.experienceInfo.filter((exp => exp.id !== info.id));\n\n    this.setState({\n      generalInfo: state.generalInfo,\n      infoSubmitted: state.infoSubmitted,\n      educationInfo: state.educationInfo,\n      experienceInfo: newExperienceInfo\n    })\n  }\n\n  render() {\n    const { \n      generalInfo, \n      infoSubmitted,\n      educationInfo,\n      experienceInfo,\n    } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"containerHeader\">\n          <h1>CV Builder</h1>\n        </div>\n        <GeneralInfo \n          info={generalInfo} \n          onInfoSubmit={this.handleInfoSubmit}\n          infoSubmitted={infoSubmitted}\n        />\n        <h2>Education</h2>\n        {educationInfo.length > 0 \n          ? educationInfo.map(education => (\n              <EducationDisplay\n                key={education.id}\n                educationInfo={education}\n                onEducationEdit={this.handleEducationEdit}\n                onEducationDelete={this.handleEducationDelete}\n              />\n          ))\n          : <p>Enter your education details below!</p>\n          }\n        <EducationForm \n          onEducationSubmit={this.handleEducationSubmit} \n        />\n        <h2>Practical Experience</h2>\n        {experienceInfo.length > 0\n          ? experienceInfo.map(experience => (\n              <PracticalExperienceDisplay\n                key={experience.id}\n                experienceInfo={experience}\n                onExperienceEdit={this.handleExperienceEdit}\n                onExperienceDelete={this.handleExperienceDelete}\n              />\n          ))\n          : <p>Enter your practical experience below!</p>\n          }\n        <PracticalExperienceForm \n          onExperienceSubmit={this.handleExperienceSubmit} \n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}